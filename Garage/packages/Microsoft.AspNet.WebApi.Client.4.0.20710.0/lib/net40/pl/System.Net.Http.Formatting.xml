<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.Http.Formatting</name>
  </assembly>
  <members>
    <member name="T:System.Net.Http.HttpClientExtensions">
      <summary>Metody rozszerzenia pomagające w tworzeniu sformatowanych żądań przy użyciu klasy <see cref="T:System.Net.Http.HttpClient" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClientExtensions.PostAsJsonAsync``1(System.Net.Http.HttpClient,System.String,``0)">
      <summary>Wysyła żądanie POST jako operację asynchroniczną z danym elementem value zserializowanym w formacie JSON.</summary>
      <returns>Obiekt zadania reprezentujący operację asynchroniczną.</returns>
      <param name="client">Klient używany do utworzenia żądania.</param>
      <param name="requestUri">Identyfikator URI, do którego jest wysyłane żądanie.</param>
      <param name="value">Wartość do zapisania w treści jednostki żądania.</param>
      <typeparam name="T">Typ obiektu do zserializowania.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpClientExtensions.PostAsJsonAsync``1(System.Net.Http.HttpClient,System.String,``0,System.Threading.CancellationToken)">
      <summary>Wysyła żądanie POST jako operację asynchroniczną z danym elementem value zserializowanym w formacie JSON. Dołącza token anulowania na potrzeby anulowania żądania.</summary>
      <returns>Obiekt zadania reprezentujący operację asynchroniczną.</returns>
      <param name="client">Klient używany do utworzenia żądania.</param>
      <param name="requestUri">Identyfikator URI, do którego jest wysyłane żądanie.</param>
      <param name="value">Wartość do zapisania w treści jednostki żądania.</param>
      <param name="cancellationToken">Token anulowania, którego mogą używać inne obiekty lub wątki w celu odebrania powiadomienia o anulowaniu.</param>
      <typeparam name="T">Typ obiektu do zserializowania.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpClientExtensions.PostAsXmlAsync``1(System.Net.Http.HttpClient,System.String,``0)">
      <summary>Wysyła żądanie POST jako operację asynchroniczną z danym elementem value zserializowanym w formacie XML.</summary>
      <returns>Obiekt zadania reprezentujący operację asynchroniczną.</returns>
      <param name="client">Klient używany do utworzenia żądania.</param>
      <param name="requestUri">Identyfikator URI, do którego jest wysyłane żądanie.</param>
      <param name="value">Wartość do zapisania w treści jednostki żądania.</param>
      <typeparam name="T">Typ obiektu do zserializowania.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpClientExtensions.PostAsXmlAsync``1(System.Net.Http.HttpClient,System.String,``0,System.Threading.CancellationToken)">
      <summary>Wysyła żądanie POST jako operację asynchroniczną z danym elementem value zserializowanym w formacie XML. Dołącza token anulowania na potrzeby anulowania żądania.</summary>
      <returns>Obiekt zadania reprezentujący operację asynchroniczną.</returns>
      <param name="client">Klient używany do utworzenia żądania.</param>
      <param name="requestUri">Identyfikator URI, do którego jest wysyłane żądanie.</param>
      <param name="value">Wartość do zapisania w treści jednostki żądania.</param>
      <param name="cancellationToken">Token anulowania, którego mogą używać inne obiekty lub wątki w celu odebrania powiadomienia o anulowaniu.</param>
      <typeparam name="T">Typ obiektu do zserializowania.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpClientExtensions.PostAsync``1(System.Net.Http.HttpClient,System.String,``0,System.Net.Http.Formatting.MediaTypeFormatter)">
      <summary>Wysyła żądanie POST jako operację asynchroniczną, z określonym elementem value zserializowanym przy użyciu podanego elementu formatującego.</summary>
      <returns>Obiekt zadania reprezentujący operację asynchroniczną.</returns>
      <param name="client">Klient używany do utworzenia żądania.</param>
      <param name="requestUri">Identyfikator URI, do którego jest wysyłane żądanie.</param>
      <param name="value">Wartość do zapisania w treści jednostki żądania.</param>
      <param name="formatter">Element formatujący używany do serializacji wartości.</param>
      <typeparam name="T">Typ obiektu do zserializowania.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpClientExtensions.PostAsync``1(System.Net.Http.HttpClient,System.String,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,System.Threading.CancellationToken)">
      <summary>Wysyła żądanie POST jako operację asynchroniczną z określonym elementem value zserializowanym przy użyciu podanego elementu formatującego i typu nośnika.</summary>
      <returns>Obiekt zadania reprezentujący operację asynchroniczną.</returns>
      <param name="client">Klient używany do utworzenia żądania.</param>
      <param name="requestUri">Identyfikator URI, do którego jest wysyłane żądanie.</param>
      <param name="value">Wartość do zapisania w treści jednostki żądania.</param>
      <param name="formatter">Element formatujący używany do serializacji elementu value.</param>
      <param name="mediaType">Wartość autorytatywna nagłówka Content-Type. Może mieć wartość null. W takim przypadku zostanie użyty domyślny typ zawartości elementu formatującego.</param>
      <param name="cancellationToken">Token anulowania, którego mogą używać inne obiekty lub wątki w celu odebrania powiadomienia o anulowaniu.</param>
      <typeparam name="T">Typ obiektu do zserializowania.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpClientExtensions.PostAsync``1(System.Net.Http.HttpClient,System.String,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
      <summary>Wysyła żądanie POST jako operację asynchroniczną z określonym elementem value zserializowanym przy użyciu ciągu danego elementu formatującego i typu nośnika.</summary>
      <returns>Obiekt zadania reprezentujący operację asynchroniczną.</returns>
      <param name="client">Klient używany do utworzenia żądania.</param>
      <param name="requestUri">Identyfikator URI, do którego jest wysyłane żądanie.</param>
      <param name="value">Wartość do zapisania w treści jednostki żądania.</param>
      <param name="formatter">Element formatujący używany do serializacji elementu value.</param>
      <param name="mediaType">Wartość autorytatywna nagłówka Content-Type. Może mieć wartość null. W takim przypadku zostanie użyty domyślny typ zawartości elementu formatującego.</param>
      <typeparam name="T">Typ obiektu do zserializowania.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpClientExtensions.PostAsync``1(System.Net.Http.HttpClient,System.String,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String,System.Threading.CancellationToken)">
      <summary>Wysyła żądanie POST jako operację asynchroniczną z określonym elementem value zserializowanym przy użyciu ciągu danego elementu formatującego i typu nośnika. Dołącza token anulowania na potrzeby anulowania żądania.</summary>
      <returns>Obiekt zadania reprezentujący operację asynchroniczną.</returns>
      <param name="client">Klient używany do utworzenia żądania.</param>
      <param name="requestUri">Identyfikator URI, do którego jest wysyłane żądanie.</param>
      <param name="value">Wartość do zapisania w treści jednostki żądania.</param>
      <param name="formatter">Element formatujący używany do serializacji wartości.</param>
      <param name="mediaType">Wartość autorytatywna nagłówka Content-Type. Może mieć wartość null. W takim przypadku zostanie użyty domyślny typ zawartości elementu formatującego.</param>
      <param name="cancellationToken">Token anulowania, którego mogą używać inne obiekty lub wątki w celu odebrania powiadomienia o anulowaniu.</param>
      <typeparam name="T">Typ obiektu do zserializowania.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpClientExtensions.PostAsync``1(System.Net.Http.HttpClient,System.String,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Threading.CancellationToken)">
      <summary>Wysyła żądanie POST jako operację asynchroniczną, z określonym elementem value zserializowanym przy użyciu podanego elementu formatującego. Dołącza token anulowania na potrzeby anulowania żądania.</summary>
      <returns>Obiekt zadania reprezentujący operację asynchroniczną.</returns>
      <param name="client">Klient używany do utworzenia żądania.</param>
      <param name="requestUri">Identyfikator URI, do którego jest wysyłane żądanie.</param>
      <param name="value">Wartość do zapisania w treści jednostki żądania.</param>
      <param name="formatter">Element formatujący używany do serializacji wartości.</param>
      <param name="cancellationToken">Token anulowania, którego mogą używać inne obiekty lub wątki w celu odebrania powiadomienia o anulowaniu.</param>
      <typeparam name="T">Typ obiektu do zserializowania.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpClientExtensions.PutAsJsonAsync``1(System.Net.Http.HttpClient,System.String,``0)">
      <summary>Wysyła żądanie PUT jako operację asynchroniczną z danym elementem value zserializowanym w formacie JSON.</summary>
      <returns>Obiekt zadania reprezentujący operację asynchroniczną.</returns>
      <param name="client">Klient używany do utworzenia żądania.</param>
      <param name="requestUri">Identyfikator URI, do którego jest wysyłane żądanie.</param>
      <param name="value">Wartość do zapisania w treści jednostki żądania.</param>
      <typeparam name="T">Typ obiektu do zserializowania.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpClientExtensions.PutAsJsonAsync``1(System.Net.Http.HttpClient,System.String,``0,System.Threading.CancellationToken)">
      <summary>Wysyła żądanie PUT jako operację asynchroniczną z danym elementem value zserializowanym w formacie JSON. Dołącza token anulowania na potrzeby anulowania żądania.</summary>
      <returns>Obiekt zadania reprezentujący operację asynchroniczną.</returns>
      <param name="client">Klient używany do utworzenia żądania.</param>
      <param name="requestUri">Identyfikator URI, do którego jest wysyłane żądanie.</param>
      <param name="value">Wartość do zapisania w treści jednostki żądania.</param>
      <param name="cancellationToken">Token anulowania, którego mogą używać inne obiekty lub wątki w celu odebrania powiadomienia o anulowaniu. </param>
      <typeparam name="T">Typ obiektu do zserializowania.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpClientExtensions.PutAsXmlAsync``1(System.Net.Http.HttpClient,System.String,``0)">
      <summary>Wysyła żądanie PUT jako operację asynchroniczną z danym elementem value zserializowanym w formacie XML.</summary>
      <returns>Obiekt zadania reprezentujący operację asynchroniczną.</returns>
      <param name="client">Klient używany do utworzenia żądania.</param>
      <param name="requestUri">Identyfikator URI, do którego jest wysyłane żądanie.</param>
      <param name="value">Wartość do zapisania w treści jednostki żądania.</param>
      <typeparam name="T">Typ obiektu do zserializowania.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpClientExtensions.PutAsXmlAsync``1(System.Net.Http.HttpClient,System.String,``0,System.Threading.CancellationToken)">
      <summary>Wysyła żądanie PUT jako operację asynchroniczną z danym elementem value zserializowanym w formacie XML. Dołącza token anulowania na potrzeby anulowania żądania.</summary>
      <returns>Obiekt zadania reprezentujący operację asynchroniczną.</returns>
      <param name="client">Klient używany do utworzenia żądania.</param>
      <param name="requestUri">Identyfikator URI, do którego jest wysyłane żądanie.</param>
      <param name="value">Wartość do zapisania w treści jednostki żądania.</param>
      <param name="cancellationToken">Token anulowania, którego mogą używać inne obiekty lub wątki w celu odebrania powiadomienia o anulowaniu.</param>
      <typeparam name="T">Typ obiektu do zserializowania.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpClientExtensions.PutAsync``1(System.Net.Http.HttpClient,System.String,``0,System.Net.Http.Formatting.MediaTypeFormatter)">
      <summary>Wysyła żądanie PUT jako operację asynchroniczną, z określonym elementem value zserializowanym przy użyciu podanego elementu formatującego.</summary>
      <returns>Obiekt zadania reprezentujący operację asynchroniczną.</returns>
      <param name="client">Klient używany do utworzenia żądania.</param>
      <param name="requestUri">Identyfikator URI, do którego jest wysyłane żądanie.</param>
      <param name="value">Wartość do zapisania w treści jednostki żądania.</param>
      <param name="formatter">Element formatujący używany do serializacji wartości.</param>
      <typeparam name="T">Typ obiektu do zserializowania.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpClientExtensions.PutAsync``1(System.Net.Http.HttpClient,System.String,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,System.Threading.CancellationToken)">
      <summary> Wysyła żądanie PUT jako operację asynchroniczną z określonym elementem value zserializowanym przy użyciu podanego elementu formatującego i typu nośnika. Dołącza token anulowania na potrzeby anulowania żądania.</summary>
      <returns>Obiekt zadania reprezentujący operację asynchroniczną.</returns>
      <param name="client">Klient używany do utworzenia żądania.</param>
      <param name="requestUri">Identyfikator URI, do którego jest wysyłane żądanie.</param>
      <param name="value">Wartość do zapisania w treści jednostki żądania.</param>
      <param name="formatter">Element formatujący używany do serializacji elementu value.</param>
      <param name="mediaType">Wartość autorytatywna nagłówka Content-Type. Może mieć wartość null. W takim przypadku zostanie użyty domyślny typ zawartości elementu formatującego.</param>
      <param name="cancellationToken">Token anulowania, którego mogą używać inne obiekty lub wątki w celu odebrania powiadomienia o anulowaniu.</param>
      <typeparam name="T">Typ obiektu do zserializowania.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpClientExtensions.PutAsync``1(System.Net.Http.HttpClient,System.String,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
      <summary>Wysyła żądanie PUT jako operację asynchroniczną z określonym elementem value zserializowanym przy użyciu ciągu podanego elementu formatującego i typu nośnika.</summary>
      <returns>Obiekt zadania reprezentujący operację asynchroniczną.</returns>
      <param name="client">Klient używany do utworzenia żądania.</param>
      <param name="requestUri">Identyfikator URI, do którego jest wysyłane żądanie.</param>
      <param name="value">Wartość do zapisania w treści jednostki żądania.</param>
      <param name="formatter">Element formatujący używany do serializacji wartości.</param>
      <param name="mediaType">Wartość autorytatywna nagłówka Content-Type. Może mieć wartość null. W takim przypadku zostanie użyty domyślny typ zawartości elementu formatującego.</param>
      <typeparam name="T">Typ obiektu do zserializowania.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpClientExtensions.PutAsync``1(System.Net.Http.HttpClient,System.String,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String,System.Threading.CancellationToken)">
      <summary>Wysyła żądanie PUT jako operację asynchroniczną z określonym elementem value zserializowanym przy użyciu ciągu podanego elementu formatującego i typu nośnika. Dołącza token anulowania na potrzeby anulowania żądania.</summary>
      <returns>Obiekt zadania reprezentujący operację asynchroniczną.</returns>
      <param name="client">Klient używany do utworzenia żądania.</param>
      <param name="requestUri">Identyfikator URI, do którego jest wysyłane żądanie.</param>
      <param name="value">Wartość do zapisania w treści jednostki żądania.</param>
      <param name="formatter">Element formatujący używany do serializacji wartości.</param>
      <param name="mediaType">Wartość autorytatywna nagłówka Content-Type. Może mieć wartość null. W takim przypadku zostanie użyty domyślny typ zawartości elementu formatującego.</param>
      <param name="cancellationToken">Token anulowania, którego mogą używać inne obiekty lub wątki w celu odebrania powiadomienia o anulowaniu.</param>
      <typeparam name="T">Typ obiektu do zserializowania.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpClientExtensions.PutAsync``1(System.Net.Http.HttpClient,System.String,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Threading.CancellationToken)">
      <summary>Wysyła żądanie PUT jako operację asynchroniczną z określonym elementem value zserializowanym przy użyciu ciągu podanego elementu formatującego i typu nośnika. Dołącza token anulowania na potrzeby anulowania żądania.</summary>
      <returns>Obiekt zadania reprezentujący operację asynchroniczną.</returns>
      <param name="client">Klient używany do utworzenia żądania.</param>
      <param name="requestUri">Identyfikator URI, do którego jest wysyłane żądanie.</param>
      <param name="value">Wartość do zapisania w treści jednostki żądania.</param>
      <param name="formatter">Element formatujący używany do serializacji wartości.</param>
      <param name="cancellationToken">Token anulowania, którego mogą używać inne obiekty lub wątki w celu odebrania powiadomienia o anulowaniu.</param>
      <typeparam name="T">Typ obiektu do zserializowania.</typeparam>
    </member>
    <member name="T:System.Net.Http.HttpClientFactory">
      <summary>Reprezentuje fabrykę na potrzeby tworzenia nowego wystąpienia klasy <see cref="T:System.Net.Http.HttpClient" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClientFactory.Create(System.Net.Http.DelegatingHandler[])">
      <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <returns>Nowe wystąpienie klasy <see cref="T:System.Net.Http.HttpClient" />.</returns>
      <param name="handlers">Lista programów obsługi HTTP, która deleguje przetwarzanie komunikatów odpowiedzi HTTP do innego programu obsługi.</param>
    </member>
    <member name="M:System.Net.Http.HttpClientFactory.Create(System.Net.Http.HttpMessageHandler,System.Net.Http.DelegatingHandler[])">
      <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <returns>Nowe wystąpienie klasy <see cref="T:System.Net.Http.HttpClient" />.</returns>
      <param name="innerHandler">Wewnętrzny program obsługi, który odpowiada za przetwarzanie komunikatów odpowiedzi HTTP.</param>
      <param name="handlers">Lista programów obsługi HTTP, która deleguje przetwarzanie komunikatów odpowiedzi HTTP do innego programu obsługi.</param>
    </member>
    <member name="M:System.Net.Http.HttpClientFactory.CreatePipeline(System.Net.Http.HttpMessageHandler,System.Collections.Generic.IEnumerable{System.Net.Http.DelegatingHandler})">
      <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Net.Http.HttpClient" />, które powinno być potokowe.</summary>
      <returns>Nowe wystąpienie klasy <see cref="T:System.Net.Http.HttpClient" />, które powinno być potokowe.</returns>
      <param name="innerHandler">Wewnętrzny program obsługi, który odpowiada za przetwarzanie komunikatów odpowiedzi HTTP.</param>
      <param name="handlers">Lista programów obsługi HTTP, która deleguje przetwarzanie komunikatów odpowiedzi HTTP do innego programu obsługi.</param>
    </member>
    <member name="T:System.Net.Http.HttpContentExtensions">
      <summary>Określa metody rozszerzenia umożliwiające odczyt silnie typizowanych obiektów z wystąpień klasy HttpContent.</summary>
    </member>
    <member name="M:System.Net.Http.HttpContentExtensions.ReadAsAsync``1(System.Net.Http.HttpContent)">
      <summary> Zwraca klasę Task, która umożliwia uzyskanie obiektu określonego typu (&lt;typeparamref name="T" /&gt;) z wystąpienia elementu content. </summary>
      <returns>Wystąpienie obiektu określonego typu.</returns>
      <param name="content">Wystąpienie klasy HttpContent, z którego ma zostać przeprowadzony odczyt.</param>
      <typeparam name="T">Typ obiektu do odczytu.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpContentExtensions.ReadAsAsync``1(System.Net.Http.HttpContent,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary> Zwraca klasę Task, która umożliwia uzyskanie obiektu określonego typu (&lt;typeparamref name="T" /&gt;) z wystąpienia elementu content. </summary>
      <returns>Wystąpienie obiektu określonego typu.</returns>
      <param name="content">Wystąpienie klasy HttpContent, z którego ma zostać przeprowadzony odczyt.</param>
      <param name="formatters">Kolekcja wystąpień klasy MediaTypeFormatter do użycia.</param>
      <typeparam name="T">Typ obiektu do odczytu.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpContentExtensions.ReadAsAsync``1(System.Net.Http.HttpContent,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Net.Http.Formatting.IFormatterLogger)">
      <summary> Zwraca klasę Task, która umożliwia uzyskanie obiektu określonego typu (&lt;typeparamref name="T" /&gt;) z wystąpienia elementu content. </summary>
      <returns>Wystąpienie obiektu określonego typu.</returns>
      <param name="content">Wystąpienie klasy HttpContent, z którego ma zostać przeprowadzony odczyt.</param>
      <param name="formatters">Kolekcja wystąpień klasy MediaTypeFormatter do użycia.</param>
      <param name="formatterLogger">Interfejs IFormatterLogger, w którym mają być rejestrowane zdarzenia.</param>
      <typeparam name="T">Typ obiektu do odczytu.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpContentExtensions.ReadAsAsync(System.Net.Http.HttpContent,System.Type)">
      <summary> Zwraca klasę Task, która umożliwia uzyskanie obiektu określonego typu (type) z wystąpienia elementu content. </summary>
      <returns>Klasa Task, która umożliwia uzyskanie wystąpienia obiektu określonego typu.</returns>
      <param name="content">Wystąpienie klasy HttpContent, z którego ma zostać przeprowadzony odczyt.</param>
      <param name="type">Typ obiektu do odczytu.</param>
    </member>
    <member name="M:System.Net.Http.HttpContentExtensions.ReadAsAsync(System.Net.Http.HttpContent,System.Type,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary> Zwraca klasę Task, która umożliwia uzyskanie obiektu określonego typu (type) z wystąpienia elementu content, używając jednego z dostarczonych elementów formatter w celu wykonania deserializacji zawartości. </summary>
      <returns>Wystąpienie obiektu określonego typu.</returns>
      <param name="content">Wystąpienie klasy HttpContent, z którego ma zostać przeprowadzony odczyt.</param>
      <param name="type">Typ obiektu do odczytu.</param>
      <param name="formatters">Kolekcja wystąpień klasy MediaTypeFormatter do użycia.</param>
    </member>
    <member name="M:System.Net.Http.HttpContentExtensions.ReadAsAsync(System.Net.Http.HttpContent,System.Type,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Net.Http.Formatting.IFormatterLogger)">
      <summary> Zwraca klasę Task, która umożliwia uzyskanie obiektu określonego typu (type) z wystąpienia elementu content, używając jednego z dostarczonych elementów formatter w celu wykonania deserializacji zawartości. </summary>
      <returns>Wystąpienie obiektu określonego typu.</returns>
      <param name="content">Wystąpienie klasy HttpContent, z którego ma zostać przeprowadzony odczyt.</param>
      <param name="type">Typ obiektu do odczytu.</param>
      <param name="formatters">Kolekcja wystąpień klasy MediaTypeFormatter do użycia.</param>
      <param name="formatterLogger">Interfejs IFormatterLogger, w którym mają być rejestrowane zdarzenia.</param>
    </member>
    <member name="T:System.Net.Http.HttpContentFormDataExtensions">
      <summary>Metody rozszerzenia umożliwiające odczyt danych formularza HTML zakodowanych w adresie URL z wystąpień klasy <see cref="T:System.Net.Http.HttpContent" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpContentFormDataExtensions.IsFormData(System.Net.Http.HttpContent)">
      <summary>Określa, czy podana zawartość to dane formularza HTML zakodowane w adresie URL.</summary>
      <returns>Wartość true, jeśli określona zawartość to dane formularza HTML zakodowane w adresie URL; w przeciwnym razie wartość false.</returns>
      <param name="content">Zawartość.</param>
    </member>
    <member name="M:System.Net.Http.HttpContentFormDataExtensions.ReadAsFormDataAsync(System.Net.Http.HttpContent)">
      <summary>Asynchronicznie odczytuje dane formularza HTML zakodowane w adresie URL z wystąpienia klasy <see cref="T:System.Net.Http.HttpContent" /> i przechowuje wyniki w obiekcie <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
      <returns>Obiekt zadania reprezentujący operację asynchroniczną.</returns>
      <param name="content">Zawartość.</param>
    </member>
    <member name="T:System.Net.Http.HttpContentMessageExtensions">
      <summary>Zapewnia metody rozszerzenia umożliwiające odczyt jednostek <see cref="T:System.Net.Http.HttpRequestMessage" /> i <see cref="T:System.Net.Http.HttpResponseMessage" /> z wystąpień klasy <see cref="T:System.Net.Http.HttpContent" />. </summary>
    </member>
    <member name="M:System.Net.Http.HttpContentMessageExtensions.IsHttpRequestMessageContent(System.Net.Http.HttpContent)">
      <summary>Określa, czy podana zawartość to zawartość komunikatu żądania HTTP.</summary>
      <returns>Wartość true, jeśli określona zawartość to zawartość komunikatu HTTP; w przeciwnym razie wartość false.</returns>
      <param name="content">Zawartość do sprawdzenia.</param>
    </member>
    <member name="M:System.Net.Http.HttpContentMessageExtensions.IsHttpResponseMessageContent(System.Net.Http.HttpContent)">
      <summary>Określa, czy podana zawartość to zawartość komunikatu odpowiedzi HTTP.</summary>
      <returns>Wartość true, jeśli określona zawartość to zawartość komunikatu HTTP; w przeciwnym razie wartość false.</returns>
      <param name="content">Zawartość do sprawdzenia.</param>
    </member>
    <member name="M:System.Net.Http.HttpContentMessageExtensions.ReadAsHttpRequestMessageAsync(System.Net.Http.HttpContent)">
      <summary> Odczytuje klasę <see cref="T:System.Net.Http.HttpContent" /> jako klasę <see cref="T:System.Net.Http.HttpRequestMessage" />. </summary>
      <returns>Przeanalizowane wystąpienie klasy <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
      <param name="content">Zawartość do odczytu.</param>
    </member>
    <member name="M:System.Net.Http.HttpContentMessageExtensions.ReadAsHttpRequestMessageAsync(System.Net.Http.HttpContent,System.String)">
      <summary> Odczytuje klasę <see cref="T:System.Net.Http.HttpContent" /> jako klasę <see cref="T:System.Net.Http.HttpRequestMessage" />. </summary>
      <returns>Przeanalizowane wystąpienie klasy <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
      <param name="content">Zawartość do odczytu.</param>
      <param name="uriScheme">Schemat URI do użycia dla identyfikatora URI żądania.</param>
    </member>
    <member name="M:System.Net.Http.HttpContentMessageExtensions.ReadAsHttpRequestMessageAsync(System.Net.Http.HttpContent,System.String,System.Int32)">
      <summary> Odczytuje klasę <see cref="T:System.Net.Http.HttpContent" /> jako klasę <see cref="T:System.Net.Http.HttpRequestMessage" />. </summary>
      <returns>Przeanalizowane wystąpienie klasy <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
      <param name="content">Zawartość do odczytu.</param>
      <param name="uriScheme">Schemat URI do użycia dla identyfikatora URI żądania.</param>
      <param name="bufferSize">Rozmiar buforu.</param>
    </member>
    <member name="M:System.Net.Http.HttpContentMessageExtensions.ReadAsHttpRequestMessageAsync(System.Net.Http.HttpContent,System.String,System.Int32,System.Int32)">
      <summary>Odczytuje klasę <see cref="T:System.Net.Http.HttpContent" /> jako klasę <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <returns>Przeanalizowane wystąpienie klasy <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
      <param name="content">Zawartość do odczytu.</param>
      <param name="uriScheme">Schemat URI do użycia dla identyfikatora URI żądania.</param>
      <param name="bufferSize">Rozmiar buforu.</param>
      <param name="maxHeaderSize">Maksymalna długość nagłówka HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpContentMessageExtensions.ReadAsHttpResponseMessageAsync(System.Net.Http.HttpContent)">
      <summary> Odczytuje klasę <see cref="T:System.Net.Http.HttpContent" /> jako klasę <see cref="T:System.Net.Http.HttpResponseMessage" />. </summary>
      <returns>Przeanalizowane wystąpienie klasy <see cref="T:System.Net.Http.HttpResponseMessage" />.</returns>
      <param name="content">Zawartość do odczytu.</param>
    </member>
    <member name="M:System.Net.Http.HttpContentMessageExtensions.ReadAsHttpResponseMessageAsync(System.Net.Http.HttpContent,System.Int32)">
      <summary>Odczytuje klasę <see cref="T:System.Net.Http.HttpContent" /> jako klasę <see cref="T:System.Net.Http.HttpResponseMessage" />. </summary>
      <returns>Przeanalizowane wystąpienie klasy <see cref="T:System.Net.Http.HttpResponseMessage" />.</returns>
      <param name="content">Zawartość do odczytu.</param>
      <param name="bufferSize">Rozmiar buforu.</param>
    </member>
    <member name="M:System.Net.Http.HttpContentMessageExtensions.ReadAsHttpResponseMessageAsync(System.Net.Http.HttpContent,System.Int32,System.Int32)">
      <summary>Odczytuje klasę <see cref="T:System.Net.Http.HttpContent" /> jako klasę <see cref="T:System.Net.Http.HttpResponseMessage" />.</summary>
      <returns>Przeanalizowane wystąpienie klasy <see cref="T:System.Net.Http.HttpResponseMessage" />.</returns>
      <param name="content">Zawartość do odczytu.</param>
      <param name="bufferSize">Rozmiar buforu.</param>
      <param name="maxHeaderSize">Maksymalna długość nagłówka HTTP.</param>
    </member>
    <member name="T:System.Net.Http.HttpContentMultipartExtensions">
      <summary>Metody rozszerzenia umożliwiające odczyt jednostek wieloczęściowej wiadomości MIME z wystąpień klasy <see cref="T:System.Net.Http.HttpContent" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpContentMultipartExtensions.IsMimeMultipartContent(System.Net.Http.HttpContent)">
      <summary>Określa, czy podana zawartość to zawartość wieloczęściowej wiadomości MIME.</summary>
      <returns>Wartość true, jeśli określona zawartość to zawartość wieloczęściowej wiadomości MIME; w przeciwnym razie wartość false.</returns>
      <param name="content">Zawartość.</param>
    </member>
    <member name="M:System.Net.Http.HttpContentMultipartExtensions.IsMimeMultipartContent(System.Net.Http.HttpContent,System.String)">
      <summary>Określa, czy podana zawartość to zawartość wieloczęściowej wiadomości MIME z określonym podtypem.</summary>
      <returns>Wartość true, jeśli określona zawartość to zawartość wieloczęściowej wiadomości MIME z określonym podtypem; w przeciwnym razie wartość false.</returns>
      <param name="content">Zawartość.</param>
      <param name="subtype">Podtyp wieloczęściowej wiadomości MIME do dopasowania.</param>
    </member>
    <member name="M:System.Net.Http.HttpContentMultipartExtensions.ReadAsMultipartAsync(System.Net.Http.HttpContent)">
      <summary>Odczytuje wszystkie części treści w wiadomości wieloczęściowej MIME i tworzy jako wynik zestaw wystąpień klasy <see cref="T:System.Net.Http.HttpContent" />.</summary>
      <returns>Element &lt;see cref="T:System.Threading.Tasks.Task`1" /&gt; reprezentujący zadania pobierania kolekcji wystąpień klasy <see cref="T:System.Net.Http.HttpContent" />, w której każde wystąpienie reprezentuje część treści.</returns>
      <param name="content">Istniejące wystąpienie klasy <see cref="T:System.Net.Http.HttpContent" /> do użycia dla zawartości obiektu.</param>
    </member>
    <member name="M:System.Net.Http.HttpContentMultipartExtensions.ReadAsMultipartAsync``1(System.Net.Http.HttpContent,``0)">
      <summary>Odczytuje wszystkie części treści wiadomości wieloczęściowej MIME i tworzy jako wynik zestaw wystąpień klasy <see cref="T:System.Net.Http.HttpContent" />, używając wystąpienia elementu streamProvider w celu określenia miejsca, w którym jest zapisywana zawartość każdej części treści.</summary>
      <returns>Element <see cref="T:System.Threading.Tasks.Task`1" /> reprezentujący zadania pobierania kolekcji wystąpień klasy <see cref="T:System.Net.Http.HttpContent" />, w której każde wystąpienie reprezentuje część treści.</returns>
      <param name="content">Istniejące wystąpienie klasy <see cref="T:System.Net.Http.HttpContent" /> do użycia dla zawartości obiektu.</param>
      <param name="streamProvider">Dostawca strumienia zapewniający strumienie wyjściowe, w których można zapisać części treści po przeanalizowaniu.</param>
      <typeparam name="T">Typ wiadomości wieloczęściowej MIME.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpContentMultipartExtensions.ReadAsMultipartAsync``1(System.Net.Http.HttpContent,``0,System.Int32)">
      <summary>Odczytuje wszystkie części treści wiadomości wieloczęściowej MIME i tworzy jako wynik zestaw wystąpień klasy <see cref="T:System.Net.Http.HttpContent" />, używając przy tym wystąpienia elementu streamProvider w celu określenia miejsca, w którym jest zapisywana zawartość każdej części treści, oraz parametru bufferSize jako rozmiaru buforu odczytu.</summary>
      <returns>Element <see cref="T:System.Threading.Tasks.Task`1" /> reprezentujący zadania pobierania kolekcji wystąpień klasy <see cref="T:System.Net.Http.HttpContent" />, w której każde wystąpienie reprezentuje część treści.</returns>
      <param name="content">Istniejące wystąpienie klasy <see cref="T:System.Net.Http.HttpContent" /> do użycia dla zawartości obiektu.</param>
      <param name="streamProvider">Dostawca strumienia zapewniający strumienie wyjściowe, w których można zapisać części treści po przeanalizowaniu.</param>
      <param name="bufferSize">Rozmiar buforu używany do odczytu treści.</param>
      <typeparam name="T">Typ wiadomości wieloczęściowej MIME.</typeparam>
    </member>
    <member name="T:System.Net.Http.HttpMessageContent">
      <summary> Klasa pochodna <see cref="T:System.Net.Http.HttpContent" /> umożliwiająca hermetyzowanie elementu <see cref="P:System.Net.Http.HttpMessageContent.HttpResponseMessage" /> lub <see cref="P:System.Net.Http.HttpMessageContent.HttpRequestMessage" /> jako jednostki o typie nośnika „application/http” (aplikacja/http). </summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageContent.#ctor(System.Net.Http.HttpRequestMessage)">
      <summary> Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.HttpMessageContent" /> hermetyzującej element <see cref="P:System.Net.Http.HttpMessageContent.HttpRequestMessage" />. </summary>
      <param name="httpRequest">Wystąpienie klasy <see cref="P:System.Net.Http.HttpMessageContent.HttpResponseMessage" /> do zhermetyzowania.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageContent.#ctor(System.Net.Http.HttpResponseMessage)">
      <summary> Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.HttpMessageContent" /> hermetyzującej element <see cref="P:System.Net.Http.HttpMessageContent.HttpResponseMessage" />. </summary>
      <param name="httpResponse">Wystąpienie klasy <see cref="P:System.Net.Http.HttpMessageContent.HttpResponseMessage" /> do zhermetyzowania.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageContent.Dispose(System.Boolean)">
      <summary> Zwalnia zasoby niezarządzane, a opcjonalnie także zarządzane. </summary>
      <param name="disposing">Wartość true powoduje zwolnienie zasobów zarządzanych i niezarządzanych, a wartość false powoduje zwolnienie tylko zasobów niezarządzanych.</param>
    </member>
    <member name="P:System.Net.Http.HttpMessageContent.HttpRequestMessage">
      <summary> Pobiera komunikat żądania HTTP. </summary>
    </member>
    <member name="P:System.Net.Http.HttpMessageContent.HttpResponseMessage">
      <summary> Pobiera komunikat odpowiedzi HTTP. </summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary> Asynchronicznie wykonuje serializację zawartości obiektu do danego elementu stream. </summary>
      <returns>Wystąpienie klasy <see cref="T:System.Threading.Tasks.Task" />, które wykonuje asynchroniczną serializację zawartości obiektu.</returns>
      <param name="stream">Klasa <see cref="T:System.IO.Stream" />, w której ma zostać wykonany zapis.</param>
      <param name="context">Skojarzona klasa <see cref="T:System.Net.TransportContext" />.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageContent.TryComputeLength(System.Int64@)">
      <summary> Oblicza długość strumienia (jeśli jest to możliwe). </summary>
      <returns>Wartość true, jeśli długość została obliczona; w przeciwnym razie wartość false.</returns>
      <param name="length">Obliczona długość strumienia.</param>
    </member>
    <member name="T:System.Net.Http.HttpRequestHeadersExtensions">
      <summary>Udostępnia metody rozszerzenia dla klasy <see cref="T:System.Net.Http.Headers.HttpRequestHeaders" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestHeadersExtensions.GetCookies(System.Net.Http.Headers.HttpRequestHeaders)">
      <summary>Pobiera wszelkie nagłówki plików cookie obecne w żądaniu.</summary>
      <returns>Kolekcja wystąpień klasy <see cref="T:System.Net.Http.Headers.CookieHeaderValue" />.</returns>
      <param name="headers">Nagłówki żądania.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestHeadersExtensions.GetCookies(System.Net.Http.Headers.HttpRequestHeaders,System.String)">
      <summary>Pobiera wszelkie nagłówki plików cookie obecne w żądaniu, które zawierają stan pliku cookie o nazwie zgodnej z określoną wartością.</summary>
      <returns>Kolekcja wystąpień klasy <see cref="T:System.Net.Http.Headers.CookieHeaderValue" />.</returns>
      <param name="headers">Nagłówki żądania.</param>
      <param name="name">Nazwa stanu pliku cookie do dopasowywania.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode)"></member>
    <member name="T:System.Net.Http.HttpResponseHeadersExtensions">
      <summary> Udostępnia metody rozszerzenia dla klasy <see cref="T:System.Net.Http.Headers.HttpResponseHeaders" />. </summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseHeadersExtensions.AddCookies(System.Net.Http.Headers.HttpResponseHeaders,System.Collections.Generic.IEnumerable{System.Net.Http.Headers.CookieHeaderValue})">
      <summary> Dodaje pliki cookie do odpowiedzi Każdy nagłówek Set-Cookie jest reprezentowany jako jedno wystąpienie klasy <see cref="T:System.Net.Http.Headers.CookieHeaderValue" />. Obiekt <see cref="T:System.Net.Http.Headers.CookieHeaderValue" /> zawiera informacje o domenie i ścieżce oraz inne informacje pliku cookie, a także jedno lub więcej wystąpień <see cref="T:System.Net.Http.Headers.CookieState" />. Każde wystąpienie <see cref="T:System.Net.Http.Headers.CookieState" /> zawiera nazwę pliku cookie i informacje o tym, czy z tą nazwą jest skojarzony stan pliku cookie. Stan ma formę obiektu <see cref="T:System.Collections.Specialized.NameValueCollection" />, który na potrzeby przesyłu ma postać danych z formularza HTML kodowanych za pomocą adresu URL.  Taka reprezentacja umożliwia przenoszenie w ramach tego samego nagłówka Cookie wielu powiązanych plików cookie z zachowaniem separacji stanów poszczególnych plików cookie. Poniżej pokazano przykładowy nagłówek Cookie. W tym przykładzie występują dwa obiekty <see cref="T:System.Net.Http.Headers.CookieState" /> o nazwach odpowiednio stan1 i stan2. Ponadto każdy stan pliku cookie zawiera dwie pary nazw i wartości (nazwa1/wartość1 i nazwa2/wartość2) oraz (nazwa3/wartość3 i nazwa4/wartość4). &lt;code&gt; Set-Cookie: stan1:nazwa1=wartość1&amp;amp;nazwa2=wartość2; stan2:nazwa3=wartość3&amp;amp;nazwa4=wartość4; domain=domena1; path=ścieżka1; &lt;/code&gt;</summary>
      <param name="headers">Nagłówki odpowiedzi</param>
      <param name="cookies">Wartości plików cookie do dodania do odpowiedzi.</param>
    </member>
    <member name="T:System.Net.Http.MultipartFileData">
      <summary>Reprezentuje dane pliku wieloczęściowego.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartFileData.#ctor(System.Net.Http.Headers.HttpContentHeaders,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.MultipartFileData" />.</summary>
      <param name="headers">Nagłówki danych pliku wieloczęściowego.</param>
      <param name="localFileName">Nazwa pliku lokalnego dla danych pliku wieloczęściowego.</param>
    </member>
    <member name="P:System.Net.Http.MultipartFileData.Headers">
      <summary>Pobiera lub ustawia nagłówki danych pliku wieloczęściowego.</summary>
      <returns>Nagłówki danych pliku wieloczęściowego.</returns>
    </member>
    <member name="P:System.Net.Http.MultipartFileData.LocalFileName">
      <summary>Pobiera lub ustawia nazwę pliku lokalnego dla danych pliku wieloczęściowego.</summary>
      <returns>Nazwa pliku lokalnego dla danych pliku wieloczęściowego.</returns>
    </member>
    <member name="T:System.Net.Http.MultipartFileStreamProvider">
      <summary>Reprezentuje interfejs <see cref="T:System.Net.Http.IMultipartStreamProvider" /> przeznaczony do zapisywania każdej części treści MIME wiadomości wieloczęściowej MIME do pliku za pomocą klasy <see cref="T:System.IO.FileStream" />.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartFileStreamProvider.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.MultipartFileStreamProvider" />.</summary>
      <param name="rootPath">Ścieżka do katalogu głównego, w którym zapisywana jest zawartość części treści wieloczęściowej wiadomości MIME.</param>
    </member>
    <member name="M:System.Net.Http.MultipartFileStreamProvider.#ctor(System.String,System.Int32)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.MultipartFileStreamProvider" />.</summary>
      <param name="rootPath">Ścieżka do katalogu głównego, w którym zapisywana jest zawartość części treści wieloczęściowej wiadomości MIME.</param>
      <param name="bufferSize">Liczba buforowanych bajtów na potrzeby operacji zapisu w pliku.</param>
    </member>
    <member name="P:System.Net.Http.MultipartFileStreamProvider.BufferSize">
      <summary>Pobiera lub ustawia liczbę buforowanych bajtów na potrzeby operacji zapisu w pliku.</summary>
      <returns>Liczba buforowanych bajtów na potrzeby operacji zapisu w pliku.</returns>
    </member>
    <member name="P:System.Net.Http.MultipartFileStreamProvider.FileData">
      <summary>Pobiera lub ustawia dane pliku wieloczęściowego.</summary>
      <returns>Dane pliku wieloczęściowego.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartFileStreamProvider.GetLocalFileName(System.Net.Http.Headers.HttpContentHeaders)">
      <summary>Pobiera nazwę pliku lokalnego, która zostanie połączona ze ścieżką do katalogu głównego w celu utworzenia bezwzględnej nazwy pliku, w którym będzie przechowywana zawartość bieżącej części treści wiadomości MIME. </summary>
      <returns>Względna nazwa pliku bez składnika ścieżki.</returns>
      <param name="headers">Nagłówki dla bieżącej części treści wiadomości MIME.</param>
    </member>
    <member name="M:System.Net.Http.MultipartFileStreamProvider.GetStream(System.Net.Http.HttpContent,System.Net.Http.Headers.HttpContentHeaders)">
      <summary>Pobiera wystąpienie strumienia, w którym zapisywana jest część treści wiadomości.</summary>
      <returns>Wystąpienie klasy <see cref="T:System.IO.Stream" />, w którym zapisywana jest część treści wiadomości.</returns>
      <param name="parent">Zawartość HTTP.</param>
      <param name="headers">Pola nagłówka opisujące część treści.</param>
    </member>
    <member name="P:System.Net.Http.MultipartFileStreamProvider.RootPath">
      <summary>Pobiera lub ustawia ścieżkę do katalogu głównego, w którym zapisywana jest zawartość części treści wieloczęściowej wiadomości MIME.</summary>
      <returns>Ścieżka do katalogu głównego, w którym zapisywana jest zawartość części treści wieloczęściowej wiadomości MIME.</returns>
    </member>
    <member name="T:System.Net.Http.MultipartFormDataStreamProvider">
      <summary> Interfejs <see cref="T:System.Net.Http.IMultipartStreamProvider" /> przeznaczony do użytku na potrzeby przekazywania plików HTML w celu zapisywania zawartości pliku w klasie <see cref="T:System.IO.FileStream" />. Dostawca strumieni sprawdza pole nagłówka &lt;b&gt;Content-Disposition&lt;/b&gt; i określa klasę wyjściową <see cref="T:System.IO.Stream" /> na podstawie obecności parametru &lt;b&gt;filename&lt;/b&gt;. Jeśli parametr &lt;b&gt;filename&lt;/b&gt; znajduje się w polu nagłówka &lt;b&gt;Content-Disposition&lt;/b&gt;, część treści jest zapisywana w klasie <see cref="T:System.IO.FileStream" />. W przeciwnym razie jest ona zapisywana w klasie <see cref="T:System.IO.MemoryStream" />. Dzięki temu jest on przydatny w przypadku przetwarzania danych formularza HTML wieloczęściowej wiadomości MIME, które stanowią połączenie danych formularza i zawartości pliku. </summary>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataStreamProvider.#ctor(System.String)">
      <summary> Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.MultipartFormDataStreamProvider" />. </summary>
      <param name="rootPath">Ścieżka do katalogu głównego, w którym zapisywana jest zawartość części treści wieloczęściowej wiadomości MIME.</param>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataStreamProvider.#ctor(System.String,System.Int32)">
      <summary> Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.MultipartFormDataStreamProvider" />. </summary>
      <param name="rootPath">Ścieżka do katalogu głównego, w którym zapisywana jest zawartość części treści wieloczęściowej wiadomości MIME.</param>
      <param name="bufferSize">Liczba buforowanych bajtów na potrzeby operacji zapisu w pliku.</param>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataStreamProvider.ExecutePostProcessingAsync">
      <summary>Odczytuje zawartość inną niż pliki jako dane formularza</summary>
      <returns>Zadanie reprezentujące operację asynchroniczną.</returns>
    </member>
    <member name="P:System.Net.Http.MultipartFormDataStreamProvider.FormData">
      <summary>Pobiera klasę <see cref="T:System.Collections.Specialized.NameValueCollection" /> danych formularza przekazanych jako część wieloczęściowych danych formularza.</summary>
      <returns>Klasa <see cref="T:System.Collections.Specialized.NameValueCollection" /> danych formularza.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataStreamProvider.GetStream(System.Net.Http.HttpContent,System.Net.Http.Headers.HttpContentHeaders)">
      <returns>Wystąpienie klasy <see cref="T:System.IO.Stream" />, w którym zapisywana jest część treści wiadomości.</returns>
      <param name="parent">Zawartość HTTP, w której znajduje się ta część treści.</param>
      <param name="headers">Pola nagłówka opisujące część treści.</param>
    </member>
    <member name="T:System.Net.Http.MultipartMemoryStreamProvider">
      <summary>Reprezentuje dostawcę wieloczęściowego strumienia pamięci.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartMemoryStreamProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.MultipartMemoryStreamProvider" />.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartMemoryStreamProvider.GetStream(System.Net.Http.HttpContent,System.Net.Http.Headers.HttpContentHeaders)">
      <summary>Zwraca element <see cref="T:System.IO.Stream" /> dla klasy <see cref="T:System.Net.Http.MultipartMemoryStreamProvider" />.</summary>
      <returns>Obiekt <see cref="T:System.IO.Stream" /> dla obiektu <see cref="T:System.Net.Http.MultipartMemoryStreamProvider" />.</returns>
      <param name="parent">Obiekt <see cref="T:System.Net.Http.HttpContent" />.</param>
      <param name="headers">Nagłówki zawartości HTTP.</param>
    </member>
    <member name="T:System.Net.Http.MultipartRelatedStreamProvider">
      <summary>Reprezentuje dostawcę dla wielu strumieni powiązanych z zawartością wieloczęściową.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartRelatedStreamProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.MultipartRelatedStreamProvider" />.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartRelatedStreamProvider.GetStream(System.Net.Http.HttpContent,System.Net.Http.Headers.HttpContentHeaders)">
      <summary>Pobiera powiązany strumień dla dostawcy.</summary>
      <returns>Nagłówki zawartości.</returns>
      <param name="parent">Zawartość nadrzędna.</param>
      <param name="headers">Nagłówki zawartości HTTP.</param>
    </member>
    <member name="P:System.Net.Http.MultipartRelatedStreamProvider.RootContent">
      <summary>Pobiera zawartość katalogu głównego klasy <see cref="T:System.Net.Http.MultipartRelatedStreamProvider" />.</summary>
      <returns>Pobiera zawartość katalogu głównego klasy <see cref="T:System.Net.Http.MultipartRelatedStreamProvider" />.</returns>
    </member>
    <member name="T:System.Net.Http.MultipartStreamProvider">
      <summary>Reprezentuje dostawcę strumienia, który sprawdza nagłówki udostępnione przez analizator wieloczęściowej wiadomości MIME jako część metod rozszerzenia wieloczęściowej wiadomości MIME (zobacz <see cref="T:System.Net.Http.HttpContentMultipartExtensions" />) i decyduje o rodzaju strumienia zwracanego przez część treści, która ma zostać w nim zapisana.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartStreamProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.MultipartStreamProvider" />.</summary>
    </member>
    <member name="P:System.Net.Http.MultipartStreamProvider.Contents">
      <summary>Pobiera lub ustawia zawartość dla tego elementu <see cref="T:System.Net.Http.MultipartStreamProvider" />.</summary>
      <returns>Zawartość dla tego elementu <see cref="T:System.Net.Http.MultipartStreamProvider" />.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartStreamProvider.ExecutePostProcessingAsync">
      <summary>Wykonuje operację przetwarzania końcowego dla tego elementu <see cref="T:System.Net.Http.MultipartStreamProvider" />.</summary>
      <returns>Zadanie asynchroniczne dla tej operacji.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartStreamProvider.GetStream(System.Net.Http.HttpContent,System.Net.Http.Headers.HttpContentHeaders)">
      <summary>Pobiera strumień, w którym będzie zapisywana część treści. Ta metoda jest wywoływana po przeanalizowaniu części treści wieloczęściowej wiadomości MIME.</summary>
      <returns>Wystąpienie klasy <see cref="T:System.IO.Stream" />, w którym zapisywana jest część treści wiadomości.</returns>
      <param name="parent">Zawartość HTTP.</param>
      <param name="headers">Pola nagłówka opisujące część treści.</param>
    </member>
    <member name="T:System.Net.Http.ObjectContent">
      <summary> Zawiera wartość oraz skojarzoną klasę <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />, która będzie używana do wykonywania serializacji wartości podczas zapisywania tej zawartości. </summary>
    </member>
    <member name="M:System.Net.Http.ObjectContent.#ctor(System.Type,System.Object,System.Net.Http.Formatting.MediaTypeFormatter)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.ObjectContent" />.</summary>
      <param name="type">Typ obiektu, który będzie zawarty w tym wystąpieniu.</param>
      <param name="value">Wartość obiektu, który będzie zawarty w tym wystąpieniu.</param>
      <param name="formatter">Element formatujący używany podczas serializowania wartości.</param>
    </member>
    <member name="M:System.Net.Http.ObjectContent.#ctor(System.Type,System.Object,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary> Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.ObjectContent" />. </summary>
      <param name="type">Typ obiektu, który będzie zawarty w tym wystąpieniu.</param>
      <param name="value">Wartość obiektu, który będzie zawarty w tym wystąpieniu.</param>
      <param name="formatter">Element formatujący używany podczas serializowania wartości.</param>
      <param name="mediaType">Wartość autorytatywna nagłówka Content-Type. Może mieć wartość null. W takim przypadku zostanie użyty domyślny typ zawartości elementu formatującego.</param>
    </member>
    <member name="M:System.Net.Http.ObjectContent.#ctor(System.Type,System.Object,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.ObjectContent" />.</summary>
      <param name="type">Typ obiektu, który będzie zawarty w tym wystąpieniu.</param>
      <param name="value">Wartość obiektu, który będzie zawarty w tym wystąpieniu.</param>
      <param name="formatter">Element formatujący używany podczas serializowania wartości.</param>
      <param name="mediaType">Wartość autorytatywna nagłówka Content-Type.</param>
    </member>
    <member name="P:System.Net.Http.ObjectContent.Formatter">
      <summary>Pobiera element formatujący typu nośnika skojarzony z tym wystąpieniem zawartości.</summary>
      <returns>
        <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />.</returns>
    </member>
    <member name="P:System.Net.Http.ObjectContent.ObjectType">
      <summary>Pobiera typ obiektu zarządzanego przez to wystąpienie klasy <see cref="T:System.Net.Http.ObjectContent" />.</summary>
      <returns>Typ obiektu.</returns>
    </member>
    <member name="M:System.Net.Http.ObjectContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary>Asynchronicznie wykonuje serializację zawartości obiektu do danego strumienia.</summary>
      <returns>Obiekt zadania reprezentujący operację asynchroniczną.</returns>
      <param name="stream">Strumień, do którego ma zostać wykonany zapis.</param>
      <param name="context">Skojarzona klasa <see cref="T:System.Net.TransportContext" />.</param>
    </member>
    <member name="M:System.Net.Http.ObjectContent.TryComputeLength(System.Int64@)">
      <summary>Oblicza długość strumienia (jeśli jest to możliwe).</summary>
      <returns>Wartość true, jeśli długość została obliczona; w przeciwnym razie wartość false.</returns>
      <param name="length">Odbiera obliczoną długość strumienia.</param>
    </member>
    <member name="P:System.Net.Http.ObjectContent.Value">
      <summary>Pobiera lub ustawia wartość zawartości.</summary>
      <returns>Wartość zawartości.</returns>
    </member>
    <member name="T:System.Net.Http.ObjectContent`1">
      <summary> Formularz ogólny klasy <see cref="T:System.Net.Http.ObjectContent" />. </summary>
      <typeparam name="T">Typ obiektu, który będzie zawarty w tej klasie.</typeparam>
    </member>
    <member name="M:System.Net.Http.ObjectContent`1.#ctor(`0,System.Net.Http.Formatting.MediaTypeFormatter)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.ObjectContent`1" />.</summary>
      <param name="value">Wartość obiektu, który będzie zawarty w tym wystąpieniu.</param>
      <param name="formatter">Element formatujący używany podczas serializowania wartości.</param>
    </member>
    <member name="M:System.Net.Http.ObjectContent`1.#ctor(`0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary> Inicjuje nowe wystąpienie klasy &lt;see cref="T:System.Net.Http.ObjectContent`1" /&gt;. </summary>
      <param name="value">Wartość obiektu, który będzie zawarty w tym wystąpieniu.</param>
      <param name="formatter">Element formatujący używany podczas serializowania wartości.</param>
      <param name="mediaType">Wartość autorytatywna nagłówka Content-Type. Może mieć wartość null. W takim przypadku zostanie użyty domyślny typ zawartości elementu formatującego.</param>
    </member>
    <member name="M:System.Net.Http.ObjectContent`1.#ctor(`0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.ObjectContent`1" />.</summary>
      <param name="value">Wartość obiektu, który będzie zawarty w tym wystąpieniu.</param>
      <param name="formatter">Element formatujący używany podczas serializowania wartości.</param>
      <param name="mediaType">Wartość autorytatywna nagłówka Content-Type.</param>
    </member>
    <member name="T:System.Net.Http.PushStreamContent">
      <summary>Włącza scenariusze, w których producent danych chce dokonywać zapisu bezpośrednio (synchronicznie lub asynchronicznie) przy użyciu strumienia.</summary>
    </member>
    <member name="M:System.Net.Http.PushStreamContent.#ctor(System.Action{System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.PushStreamContent" />.</summary>
      <param name="onStreamAvailable">Akcja wywoływana, gdy strumień wyjściowy jest dostępny, umożliwiając akcji bezpośredni zapis do tego strumienia. </param>
    </member>
    <member name="M:System.Net.Http.PushStreamContent.#ctor(System.Action{System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext},System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.PushStreamContent" />.</summary>
      <param name="onStreamAvailable">Akcja wywoływana, gdy strumień wyjściowy jest dostępny, umożliwiając akcji bezpośredni zapis do tego strumienia.</param>
      <param name="mediaType">Typ nośnika.</param>
    </member>
    <member name="M:System.Net.Http.PushStreamContent.#ctor(System.Action{System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext},System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.PushStreamContent" />.</summary>
      <param name="onStreamAvailable">Akcja wywoływana, gdy strumień wyjściowy jest dostępny, umożliwiając akcji bezpośredni zapis do tego strumienia.</param>
      <param name="mediaType">Typ nośnika.</param>
    </member>
    <member name="M:System.Net.Http.PushStreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary>Asynchronicznie wykonuje serializację zawartości przekazywanej do strumienia.</summary>
      <returns>Zserializowana zawartość przekazywana.</returns>
      <param name="stream">Strumień, w którym będzie wykonywana serializacja przekazywanej zawartości.</param>
      <param name="context">Kontekst.</param>
    </member>
    <member name="M:System.Net.Http.PushStreamContent.TryComputeLength(System.Int64@)">
      <summary>Określa, czy zawartość strumienia ma prawidłową długość (w bajtach).</summary>
      <returns>Wartość true, jeśli długość jest prawidłowa; w przeciwnym razie — false.</returns>
      <param name="length">Długość (w bajtach) zawartości strumienia.</param>
    </member>
    <member name="T:System.Net.Http.UriExtensions">
      <summary>Zawiera metody rozszerzenia umożliwiające odczyt silnie typizowanych obiektów ze składnika zapytania wystąpień klasy <see cref="T:System.Uri" />. </summary>
    </member>
    <member name="M:System.Net.Http.UriExtensions.ParseQueryString(System.Uri)">
      <summary>Analizuje część zapytania określonego identyfikatora URI.</summary>
      <returns>Klasa <see cref="T:System.Collections.Specialized.NameValueCollection" /> zawierająca parametry zapytania.</returns>
      <param name="address">Identyfikator URI do przeanalizowania.</param>
    </member>
    <member name="M:System.Net.Http.UriExtensions.TryReadQueryAs(System.Uri,System.Type,System.Object@)">
      <summary>Odczytuje dane formularza HTML zakodowane w adresie URL udostępnione w ciągu zapytania identyfikatora URI jako obiekt określonego typu.</summary>
      <returns>Wartość true, jeśli składnik zapytania identyfikatora URI może zostać odczytany jako określony typ; w przeciwnym razie wartość false.</returns>
      <param name="address">Identyfikator URI do odczytu.</param>
      <param name="type">Typ obiektu do odczytania.</param>
      <param name="value">Po powrocie z tej metody zawiera obiekt inicjowany ze składnika zapytania identyfikatora URI. Ten parametr jest traktowany jako niezainicjowany.</param>
    </member>
    <member name="M:System.Net.Http.UriExtensions.TryReadQueryAs``1(System.Uri,``0@)">
      <summary>Odczytuje dane formularza HTML zakodowane w adresie URL udostępnione w ciągu zapytania identyfikatora URI jako obiekt określonego typu.</summary>
      <returns>Wartość true, jeśli składnik zapytania identyfikatora URI może zostać odczytany jako określony typ; w przeciwnym razie wartość false.</returns>
      <param name="address">Identyfikator URI do odczytu.</param>
      <param name="value">Po powrocie z tej metody zawiera obiekt inicjowany ze składnika zapytania identyfikatora URI. Ten parametr jest traktowany jako niezainicjowany.</param>
      <typeparam name="T">Typ obiektu do odczytania.</typeparam>
    </member>
    <member name="M:System.Net.Http.UriExtensions.TryReadQueryAsJson(System.Uri,Newtonsoft.Json.Linq.JObject@)">
      <summary>Odczytuje kod HTML z zakodowanych danych adresu URL udostępnionych w ramach składnika zapytania klasy <see cref="T:System.Uri" /> jako obiekt <see cref="T:Newtonsoft.Json.Linq.JObject" />.</summary>
      <returns>  Wartość true, jeśli składnik zapytania może zostać odczytany jako obiekt <see cref="T:Newtonsoft.Json.Linq.JObject" />; w przeciwnym razie wartość false.</returns>
      <param name="address">Wystąpienie klasy <see cref="T:System.Uri" />, z którego ma zostać przeprowadzony odczyt.</param>
      <param name="value">Obiekt do zainicjowania z tym wystąpieniem lub wartość null, jeśli nie można przeprowadzić konwersji.</param>
    </member>
    <member name="T:System.Net.Http.Formatting.BufferedMediaTypeFormatter">
      <summary>Reprezentuje klasę pomocy umożliwiającą umieszczenie synchronicznego elementu formatującego na szczycie infrastruktury asynchronicznego elementu formatującego.</summary>
    </member>
    <member name="M:System.Net.Http.Formatting.BufferedMediaTypeFormatter.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.Formatting.BufferedMediaTypeFormatter" />.</summary>
    </member>
    <member name="P:System.Net.Http.Formatting.BufferedMediaTypeFormatter.BufferSize">
      <summary>Pobiera lub ustawia sugerowany rozmiar buforu dla strumieni (w bajtach).</summary>
      <returns>Sugerowany rozmiar buforu dla strumieni (w bajtach).</returns>
    </member>
    <member name="M:System.Net.Http.Formatting.BufferedMediaTypeFormatter.ReadFromStream(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)">
      <summary>Wykonuje synchroniczny odczyt z buforowanego strumienia.</summary>
      <returns>Obiekt z danym parametrem <paramref name="type" />.</returns>
      <param name="type">Typ obiektu do zdeserializowania.</param>
      <param name="readStream">Strumień, z którego ma zostać przeprowadzony odczyt.</param>
      <param name="content">Klasa <see cref="T:System.Net.Http.HttpContent" />, jeśli jest dostępna. Może mieć wartość null.</param>
      <param name="formatterLogger">Element <see cref="T:System.Net.Http.Formatting.IFormatterLogger" />, w którym mają być rejestrowane zdarzenia.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.BufferedMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)">
      <summary>Wykonuje asynchroniczny odczyt z buforowanego strumienia.</summary>
      <returns>Obiekt zadania reprezentujący operację asynchroniczną.</returns>
      <param name="type">Typ obiektu do zdeserializowania.</param>
      <param name="readStream">Strumień, z którego ma zostać przeprowadzony odczyt.</param>
      <param name="content">Klasa <see cref="T:System.Net.Http.HttpContent" />, jeśli jest dostępna. Może mieć wartość null.</param>
      <param name="formatterLogger">Element <see cref="T:System.Net.Http.Formatting.IFormatterLogger" />, w którym mają być rejestrowane zdarzenia.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.BufferedMediaTypeFormatter.WriteToStream(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent)">
      <summary>Wykonuje synchroniczny zapis do buforowanego strumienia.</summary>
      <param name="type">Typ obiektu do zserializowania.</param>
      <param name="value">Wartość obiektu do zapisania. Może mieć wartość null.</param>
      <param name="writeStream">Strumień, do którego ma zostać wykonany zapis.</param>
      <param name="content">Klasa <see cref="T:System.Net.Http.HttpContent" />, jeśli jest dostępna. Może mieć wartość null.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.BufferedMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext)">
      <summary>Wykonuje asynchroniczny zapis do buforowanego strumienia.</summary>
      <returns>Obiekt zadania reprezentujący operację asynchroniczną.</returns>
      <param name="type">Typ obiektu do zserializowania.</param>
      <param name="value">Wartość obiektu do zapisania.  Może to być wartość null.</param>
      <param name="writeStream">Strumień, do którego ma zostać wykonany zapis.</param>
      <param name="content">Klasa <see cref="T:System.Net.Http.HttpContent" />, jeśli jest dostępna. Może mieć wartość null.</param>
      <param name="transportContext">Kontekst transportu.</param>
    </member>
    <member name="T:System.Net.Http.Formatting.ContentNegotiationResult">
      <summary> Reprezentuje wynik negocjowania zawartości wykonywanego przy użyciu metody &lt;see cref="M:System.Net.Http.Formatting.IContentNegotiator.Negotiate(System.Type,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})" /&gt;</summary>
    </member>
    <member name="M:System.Net.Http.Formatting.ContentNegotiationResult.#ctor(System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary> Tworzy obiekt wyniku negocjowania zawartości. </summary>
      <param name="formatter">Element formatujący.</param>
      <param name="mediaType">Preferowany typ nośnika. Może mieć wartość null.</param>
    </member>
    <member name="P:System.Net.Http.Formatting.ContentNegotiationResult.Formatter">
      <summary> Element formatujący wybrany dla serializacji. </summary>
    </member>
    <member name="P:System.Net.Http.Formatting.ContentNegotiationResult.MediaType">
      <summary> Typ nośnika skojarzony z elementem formatującym wybranym dla serializacji. Może mieć wartość null. </summary>
    </member>
    <member name="T:System.Net.Http.Formatting.DefaultContentNegotiator">
      <summary>Domyślna implementacja interfejsu <see cref="T:System.Net.Http.Formatting.IContentNegotiator" />, który umożliwia wybranie klasy <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> dla klasy <see cref="T:System.Net.Http.HttpRequestMessage" /> lub <see cref="T:System.Net.Http.HttpResponseMessage" />. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.DefaultContentNegotiator.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.Formatting.DefaultContentNegotiator" />.</summary>
    </member>
    <member name="M:System.Net.Http.Formatting.DefaultContentNegotiator.#ctor(System.Boolean)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.Formatting.DefaultContentNegotiator" />.</summary>
      <param name="excludeMatchOnTypeOnly">Wartość true w celu wykluczenia elementów formatujących zgodnych tylko z typem obiektu; w przeciwnym razie wartość false.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.DefaultContentNegotiator.ComputeFormatterMatches(System.Type,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Określa jakość dopasowania elementu formatującego do żądania HTTP.</summary>
      <returns>Zwraca kolekcję obiektów <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterMatch" /> reprezentujących wszystkie dopasowania.</returns>
      <param name="type">Typ do zserializowania.</param>
      <param name="request">Żądanie.</param>
      <param name="formatters">Zestaw obiektów <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />, z których ma być dokonany wybór.</param>
    </member>
    <member name="P:System.Net.Http.Formatting.DefaultContentNegotiator.ExcludeMatchOnTypeOnly">
      <summary>Wartość true w celu wykluczenia elementów formatujących zgodnych tylko z typem obiektu; w przeciwnym razie wartość false.</summary>
      <returns>Zwraca wartość <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Net.Http.Formatting.DefaultContentNegotiator.MatchAcceptHeader(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.MediaTypeWithQualityHeaderValue},System.Net.Http.Formatting.MediaTypeFormatter)">
      <summary>Dopasowuje zestaw pól nagłówka Accept do typów nośników obsługiwanych przez element formatujący.</summary>
      <returns>Zwraca obiekt <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterMatch" /> określający jakość dopasowania lub wartość null w przypadku braku dopasowań.</returns>
      <param name="sortedAcceptValues">Lista wartości nagłówka Accept posortowanych malejąco według współczynnika dobroci. Tę listę można utworzyć przez wywołanie metody <see cref="M:System.Net.Http.Formatting.DefaultContentNegotiator.SortMediaTypeWithQualityHeaderValuesByQFactor(System.Collections.Generic.ICollection{System.Net.Http.Headers.MediaTypeWithQualityHeaderValue})" />.</param>
      <param name="formatter">Element formatujący, do którego mają być dopasowywane inne elementy.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.DefaultContentNegotiator.MatchMediaTypeMapping(System.Net.Http.HttpRequestMessage,System.Net.Http.Formatting.MediaTypeFormatter)">
      <summary>Dopasowuje żądanie do obiektów <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" /> w elemencie formatującym typ nośnika.</summary>
      <returns>Zwraca obiekt <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterMatch" /> określający jakość dopasowania lub wartość null w przypadku braku dopasowań.</returns>
      <param name="request">Żądanie.</param>
      <param name="formatter">Program formatujący typ nośnika.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.DefaultContentNegotiator.MatchRequestMediaType(System.Net.Http.HttpRequestMessage,System.Net.Http.Formatting.MediaTypeFormatter)">
      <summary>Dopasowanie typu zawartości żądania do typów nośników obsługiwanych przez element formatujący.</summary>
      <returns>Zwraca obiekt <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterMatch" /> określający jakość dopasowania lub wartość null w przypadku braku dopasowań.</returns>
      <param name="request">Żądanie.</param>
      <param name="formatter">Element formatujący, do którego mają być dopasowywane inne elementy.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.DefaultContentNegotiator.MatchType(System.Type,System.Net.Http.Formatting.MediaTypeFormatter)">
      <summary>Wybiera pierwszy obsługiwany typ nośnika elementu formatującego.</summary>
      <returns>Zwraca obiekt <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterMatch" /> z elementem <see cref="P:System.Net.Http.Formatting.MediaTypeFormatterMatch.Ranking" /> z ustawioną wartością <see cref="F:System.Net.Http.Formatting.MediaTypeFormatterMatchRanking.MatchOnCanWriteType" /> lub wartością null w przypadku braku dopasowań. </returns>
      <param name="type">Typ do dopasowania.</param>
      <param name="formatter">Element formatujący, do którego mają być dopasowywane inne elementy.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.DefaultContentNegotiator.Negotiate(System.Type,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary> Wykonuje negocjowanie zawartości przez wybranie najbardziej odpowiedniej klasy <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> spośród przekazanych elementów <paramref name="formatters" /> dla danego elementu <paramref name="request" />, która może wykonać serializację obiektu danego elementu <paramref name="type" />. </summary>
      <returns>Wynik negocjacji zawierający najbardziej odpowiednie wystąpienie klasy <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> lub wartość null, jeśli nie ma odpowiedniego obiektu formatującego.</returns>
      <param name="type">Typ do zserializowania.</param>
      <param name="request">Żądanie.</param>
      <param name="formatters">Zestaw obiektów <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />, z których ma być dokonany wybór.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.DefaultContentNegotiator.SelectResponseCharacterEncoding(System.Net.Http.HttpRequestMessage,System.Net.Http.Formatting.MediaTypeFormatter)">
      <summary>Określa optymalne kodowanie znaków na potrzeby zapisu odpowiedzi.</summary>
      <returns>Zwraca element <see cref="T:System.Text.Encoding" /> będący najlepszym dopasowaniem.</returns>
      <param name="request">Żądanie.</param>
      <param name="formatter">Wybrany element formatujący nośnik.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.DefaultContentNegotiator.SelectResponseMediaTypeFormatter(System.Collections.Generic.ICollection{System.Net.Http.Formatting.MediaTypeFormatterMatch})">
      <summary>Wybiera najlepsze dopasowanie spośród odnalezionych dopasowań.</summary>
      <returns>Zwraca obiekt <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterMatch" /> reprezentujący najlepsze dopasowanie.</returns>
      <param name="matches">Kolekcja dopasowań.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.DefaultContentNegotiator.SortMediaTypeWithQualityHeaderValuesByQFactor(System.Collections.Generic.ICollection{System.Net.Http.Headers.MediaTypeWithQualityHeaderValue})">
      <summary>Sortuje wartości nagłówka Accept malejąco według współczynnika dobroci.</summary>
      <returns>Zwraca posortowaną listę obiektów MediaTypeWithQualityHeaderValue.</returns>
      <param name="headerValues">Kolekcja obiektów MediaTypeWithQualityHeaderValue reprezentujących wartości nagłówka Accept.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.DefaultContentNegotiator.SortStringWithQualityHeaderValuesByQFactor(System.Collections.Generic.ICollection{System.Net.Http.Headers.StringWithQualityHeaderValue})">
      <summary>Sortuje listę wartości nagłówka Accept-Charset, Accept-Encoding lub Accept-Language albo pokrewnych wartości nagłówka malejąco według współczynnika dobroci. </summary>
      <returns>Zwraca posortowaną listę obiektów StringWithQualityHeaderValue.</returns>
      <param name="headerValues">Kolekcja obiektów StringWithQualityHeaderValue reprezentujących pola nagłówka.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.DefaultContentNegotiator.UpdateBestMatch(System.Net.Http.Formatting.MediaTypeFormatterMatch,System.Net.Http.Formatting.MediaTypeFormatterMatch)">
      <summary>Określa, czy dopasowanie jest lepsze niż bieżące dopasowanie.</summary>
      <returns>Zwraca obiekt <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterMatch" /> będący lepszym dopasowaniem.</returns>
      <param name="current">Bieżące dopasowanie.</param>
      <param name="potentialReplacement">Dopasowanie do porównania z bieżącym dopasowaniem.</param>
    </member>
    <member name="T:System.Net.Http.Formatting.DelegatingEnumerable`1">
      <summary> Klasa pomocy do serializacji typów &lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt; przez delegowanie ich za pomocą konkretnej implementacji."/&amp;gt;. </summary>
      <typeparam name="T">Implementacja interfejsu do serwera proxy.</typeparam>
    </member>
    <member name="M:System.Net.Http.Formatting.DelegatingEnumerable`1.#ctor">
      <summary> Inicjuje element DelegatingEnumerable. Ten konstruktor jest konieczny, aby element <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> mógł działać. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.DelegatingEnumerable`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary> Inicjuje element DelegatingEnumerable za pomocą interfejsu &lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;. Jest to klasa pomocy dla interfejsów &lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt; serwera proxy dla klasy <see cref="T:System.Xml.Serialization.XmlSerializer" />. </summary>
      <param name="source">Wystąpienie interfejsu &lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;, z którego ma być pobrany element wyliczający.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.DelegatingEnumerable`1.Add(System.Object)">
      <summary> Ta metoda nie jest zaimplementowana, ale jest wymagana, aby serializacja działała. Nie używaj. </summary>
      <param name="item">Element do dodania. Nieużywany.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.DelegatingEnumerable`1.GetEnumerator">
      <summary> Pobiera element wyliczający skojarzonego interfejsu &lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;. </summary>
      <returns>Element wyliczający źródła interfejsu &lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;.</returns>
    </member>
    <member name="M:System.Net.Http.Formatting.DelegatingEnumerable`1.System#Collections#IEnumerable#GetEnumerator">
      <summary> Pobiera element wyliczający skojarzonego interfejsu &lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;. </summary>
      <returns>Element wyliczający źródła interfejsu &lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;.</returns>
    </member>
    <member name="T:System.Net.Http.Formatting.FormDataCollection">
      <summary>Reprezentuje kolekcję danych formularza.</summary>
    </member>
    <member name="M:System.Net.Http.Formatting.FormDataCollection.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.Formatting.FormDataCollection" />.</summary>
      <param name="pairs">Pary.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.FormDataCollection.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.Formatting.FormDataCollection" />.</summary>
      <param name="query">Zapytanie.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.FormDataCollection.#ctor(System.Uri)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.Formatting.FormDataCollection" />.</summary>
      <param name="uri">Identyfikator URI</param>
    </member>
    <member name="M:System.Net.Http.Formatting.FormDataCollection.Get(System.String)">
      <summary>Pobiera kolekcję danych formularza.</summary>
      <returns>Kolekcja danych formularza.</returns>
      <param name="key">Klucz.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.FormDataCollection.GetEnumerator">
      <summary>Pobiera moduł wyliczający, który iteruje po kolekcji.</summary>
      <returns>Moduł wyliczający, który iteruje po kolekcji.</returns>
    </member>
    <member name="M:System.Net.Http.Formatting.FormDataCollection.GetValues(System.String)">
      <summary>Pobiera wartości kolekcji danych formularza.</summary>
      <returns>Wartości kolekcji danych formularza.</returns>
      <param name="key">Klucz.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.FormDataCollection.ReadAsNameValueCollection">
      <summary>Odczytuje kolekcję danych formularza jako kolekcję wartości nazwy.</summary>
      <returns>Kolekcja danych formularza jako kolekcja wartości nazwy.</returns>
    </member>
    <member name="M:System.Net.Http.Formatting.FormDataCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Pobiera moduł wyliczający, który iteruje po kolekcji.</summary>
      <returns>Moduł wyliczający, który iteruje po kolekcji.</returns>
    </member>
    <member name="T:System.Net.Http.Formatting.FormUrlEncodedMediaTypeFormatter">
      <summary>Klasa <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> do obsługi danych formularza HTML zakodowanych w adresie URL, czyli danych application/x-www-form-urlencoded.  </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.FormUrlEncodedMediaTypeFormatter.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.Formatting.FormUrlEncodedMediaTypeFormatter" />.</summary>
    </member>
    <member name="M:System.Net.Http.Formatting.FormUrlEncodedMediaTypeFormatter.CanReadType(System.Type)">
      <summary>Sprawdza, czy klasa <see cref="T:System.Net.Http.Formatting.FormUrlEncodedMediaTypeFormatter" /> może wykonywać deserializację obiektu określonego typu.</summary>
      <returns>Wartość true, jeśli klasa <see cref="T:System.Net.Http.Formatting.FormUrlEncodedMediaTypeFormatter" /> może wykonywać deserializację typu; w przeciwnym razie wartość false.</returns>
      <param name="type">Typ do zdeserializowania.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.FormUrlEncodedMediaTypeFormatter.CanWriteType(System.Type)">
      <summary>Sprawdza, czy klasa <see cref="T:System.Net.Http.Formatting.FormUrlEncodedMediaTypeFormatter" /> może wykonywać serializację obiektu określonego typu.</summary>
      <returns>Wartość true, jeśli klasa <see cref="T:System.Net.Http.Formatting.FormUrlEncodedMediaTypeFormatter" /> może wykonywać serializację typu; w przeciwnym razie wartość false.</returns>
      <param name="type">Typ do zserializowania.</param>
    </member>
    <member name="P:System.Net.Http.Formatting.FormUrlEncodedMediaTypeFormatter.DefaultMediaType">
      <summary>Pobiera domyślny typ nośnika dla danych formularza HTML zakodowanych w adresie URL, czyli application/x-www-form-urlencoded.</summary>
      <returns>Domyślny typ nośnika dla danych formularza HTML zakodowanych w adresie URL.</returns>
    </member>
    <member name="P:System.Net.Http.Formatting.FormUrlEncodedMediaTypeFormatter.MaxDepth">
      <summary>Pobiera lub ustawia maksymalną głębokość dozwoloną przez ten element formatujący.</summary>
      <returns>Maksymalna głębokość.</returns>
    </member>
    <member name="P:System.Net.Http.Formatting.FormUrlEncodedMediaTypeFormatter.ReadBufferSize">
      <summary>Pobiera lub ustawia rozmiar bufora podczas odczytywania strumienia przychodzącego.</summary>
      <returns>Rozmiar buforu.</returns>
    </member>
    <member name="M:System.Net.Http.Formatting.FormUrlEncodedMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)">
      <summary> Asynchronicznie deserializuje obiekt określonego typu.</summary>
      <returns>Klasa <see cref="T:System.Threading.Tasks.Task" />, która jako wynik zwróci odczytane wystąpienie obiektu.</returns>
      <param name="type">Typ obiektu do zdeserializowania.</param>
      <param name="readStream">Element <see cref="T:System.IO.Stream" /> do odczytu.</param>
      <param name="content">Klasa <see cref="T:System.Net.Http.HttpContent" /> dla odczytywanej zawartości.</param>
      <param name="formatterLogger">Element <see cref="T:System.Net.Http.Formatting.IFormatterLogger" />, w którym mają być rejestrowane zdarzenia.</param>
    </member>
    <member name="T:System.Net.Http.Formatting.IContentNegotiator">
      <summary> Przeprowadza negocjowanie zawartości.  Jest to proces wybierania składnika zapisywania (elementu formatującego) zgodnie z wartościami nagłówka w żądaniu. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.IContentNegotiator.Negotiate(System.Type,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary> Wykonuje negocjowanie zawartości przez wybranie najbardziej odpowiedniej klasy <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> spośród przekazanych elementów formatters dla danego elementu request, która może wykonać serializację obiektu danego elementu type. </summary>
      <returns>Wynik negocjacji zawierający najbardziej odpowiednie wystąpienie klasy <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> lub wartość null, jeśli nie ma odpowiedniego obiektu formatującego.</returns>
      <param name="type">Typ do zserializowania.</param>
      <param name="request">Komunikat żądania, który zawiera wartości nagłówka używane do przeprowadzania negocjacji.</param>
      <param name="formatters">Zestaw obiektów <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />, z których ma być dokonany wybór.</param>
    </member>
    <member name="T:System.Net.Http.Formatting.IFormatterLogger">
      <summary>Określa interfejs wywołania zwrotnego, za pomocą którego element formatujący może rejestrować błędy podczas odczytu.</summary>
    </member>
    <member name="M:System.Net.Http.Formatting.IFormatterLogger.LogError(System.String,System.Exception)">
      <summary>Rejestruje błąd.</summary>
      <param name="errorPath">Ścieżka do elementu, dla którego jest rejestrowany błąd.</param>
      <param name="exception">Komunikat o błędzie.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.IFormatterLogger.LogError(System.String,System.String)">
      <summary>Rejestruje błąd.</summary>
      <param name="errorPath">Ścieżka do elementu, dla którego jest rejestrowany błąd.</param>
      <param name="errorMessage">Komunikat o błędzie, który ma zostać zarejestrowany.</param>
    </member>
    <member name="T:System.Net.Http.Formatting.IRequiredMemberSelector">
      <summary>Definiuje metodę określającą, czy dany element jest wymagany przy deserializacji.</summary>
    </member>
    <member name="M:System.Net.Http.Formatting.IRequiredMemberSelector.IsRequiredMember(System.Reflection.MemberInfo)">
      <summary>Określa, czy dany element jest wymagany przy deserializacji.</summary>
      <returns>Wartość true, jeśli element <paramref name="member" /> powinien być traktowany jako wymagany; w przeciwnym razie wartość false.</returns>
      <param name="member">Klasa <see cref="T:System.Reflection.MemberInfo" /> do zdeserializowania.</param>
    </member>
    <member name="T:System.Net.Http.Formatting.JsonMediaTypeFormatter">
      <summary>Reprezentuje klasę <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> na potrzeby obsługi formatu JSON. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.JsonMediaTypeFormatter.#ctor">
      <summary> Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.Formatting.JsonMediaTypeFormatter" />. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.JsonMediaTypeFormatter.CanReadType(System.Type)">
      <summary>Określa, czy ta klasa <see cref="T:System.Net.Http.Formatting.JsonMediaTypeFormatter" /> może odczytywać obiekty z określonym parametrem <paramref name="type" />.</summary>
      <returns>Wartość true, jeśli obiekty z tym parametrem <paramref name="type" /> mogą być odczytywane. W przeciwnym razie wartość false.</returns>
      <param name="type">Typ obiektu, który będzie odczytywany.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.JsonMediaTypeFormatter.CanWriteType(System.Type)">
      <summary>Określa, czy ta klasa <see cref="T:System.Net.Http.Formatting.JsonMediaTypeFormatter" /> może dokonywać zapisu obiektów z określonym parametrem <paramref name="type" />.</summary>
      <returns>Wartość true, jeśli obiekty z tym parametrem <paramref name="type" /> mogą być zapisywane. W przeciwnym razie wartość false.</returns>
      <param name="type">Typ obiektu, który będzie zapisywany.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.JsonMediaTypeFormatter.CreateDefaultSerializerSettings">
      <summary> Tworzy wystąpienie klasy JsonSerializerSettings przy użyciu ustawień domyślnych używanych przez klasę <see cref="T:System.Net.Http.Formatting.JsonMediaTypeFormatter" />. </summary>
      <returns>Nowo utworzone wystąpienie klasy JsonSerializerSettings z ustawieniami domyślnymi używanymi przez klasę <see cref="T:System.Net.Http.Formatting.JsonMediaTypeFormatter" />.</returns>
    </member>
    <member name="P:System.Net.Http.Formatting.JsonMediaTypeFormatter.DefaultMediaType">
      <summary>Pobiera domyślny typ nośnika dla formatu JSON, czyli „application/json”.</summary>
      <returns>Klasa <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> dla formatu JSON.</returns>
    </member>
    <member name="P:System.Net.Http.Formatting.JsonMediaTypeFormatter.Indent">
      <summary> Pobiera lub ustawia wartość wskazującą, czy stosować wcięcia elementów podczas zapisywania danych.  </summary>
      <returns>Wartość true, jeśli podczas zapisywania danych mają być stosowane wcięcia elementów. W przeciwnym razie wartość false.</returns>
    </member>
    <member name="P:System.Net.Http.Formatting.JsonMediaTypeFormatter.MaxDepth">
      <summary>Pobiera lub ustawia maksymalną głębokość dozwoloną przez ten element formatujący.</summary>
      <returns>Maksymalna głębokość dozwolona przez ten element formatujący.</returns>
    </member>
    <member name="M:System.Net.Http.Formatting.JsonMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)">
      <summary>Odczytuje obiekt o określonym parametrze <paramref name="type" /> z określonego parametru <paramref name="stream" />. Ta metoda jest wywoływana podczas deserializacji.</summary>
      <returns>Zwraca wartość <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
      <param name="type">Typ obiektu do odczytania.</param>
      <param name="readStream">Strumień, z którego ma zostać przeprowadzony odczyt.</param>
      <param name="content">Zapisywana zawartość.</param>
      <param name="formatterLogger">Element <see cref="T:System.Net.Http.Formatting.IFormatterLogger" />, w którym mają być rejestrowane zdarzenia.</param>
    </member>
    <member name="P:System.Net.Http.Formatting.JsonMediaTypeFormatter.SerializerSettings">
      <summary> Pobiera lub ustawia klasę JsonSerializerSettings używaną do konfigurowania klasy JsonSerializer. </summary>
      <returns> Klasa JsonSerializerSettings służąca do konfigurowania klasy JsonSerializer. </returns>
    </member>
    <member name="P:System.Net.Http.Formatting.JsonMediaTypeFormatter.UseDataContractJsonSerializer">
      <summary> Pobiera lub ustawia wartość wskazującą, czy klasa <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> ma być używana domyślnie. </summary>
      <returns>Wartość true, jeśli klasa <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> ma być używana domyślnie. W przeciwnym razie wartość false.</returns>
    </member>
    <member name="M:System.Net.Http.Formatting.JsonMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext)">
      <summary>Zapisuje obiekt o określonym parametrze <paramref name="type" /> do określonego parametru <paramref name="stream" />. Ta metoda jest wywoływana podczas serializacji.</summary>
      <returns>Klasa <see cref="T:System.Threading.Tasks.Task" />, która będzie zapisywała wartość w strumieniu.</returns>
      <param name="type">Typ obiektu do zapisania.</param>
      <param name="value">Obiekt do zapisania.</param>
      <param name="writeStream">Klasa <see cref="T:System.IO.Stream" />, w której ma zostać wykonany zapis.</param>
      <param name="content">Klasa <see cref="T:System.Net.Http.HttpContent" />, w której jest zapisywana zawartość.</param>
      <param name="transportContext">
        <see cref="T:System.Net.TransportContext" />.</param>
    </member>
    <member name="T:System.Net.Http.Formatting.MediaTypeFormatter">
      <summary> Klasa podstawowa do obsługi serializacji i deserializacji silnie typizowanych obiektów przy użyciu klasy <see cref="T:System.Net.Http.ObjectContent" />. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatter.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />.</summary>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatter.CanReadType(System.Type)">
      <summary>Sprawdza, czy ta klasa <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> może wykonywać deserializację obiektu określonego typu.</summary>
      <returns>Wartość true, jeśli klasa <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> może wykonywać deserializację typu; w przeciwnym razie wartość false.</returns>
      <param name="type">Typ do zdeserializowania.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatter.CanWriteType(System.Type)">
      <summary>Sprawdza, czy ta klasa <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> może wykonywać serializację obiektu określonego typu.</summary>
      <returns>Wartość true, jeśli klasa <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> może wykonywać serializację typu; w przeciwnym razie wartość false.</returns>
      <param name="type">Typ do zserializowania.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatter.GetDefaultValueForType(System.Type)">
      <summary>Pobiera wartość domyślną dla określonego typu.</summary>
      <returns>Wartość domyślna.</returns>
      <param name="type">Typ, dla którego ma zostać pobrana wartość domyślna.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatter.GetPerRequestFormatterInstance(System.Type,System.Net.Http.HttpRequestMessage,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary>Zwraca specjalne wystąpienie klasy <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />, które umożliwia formatowanie odpowiedzi dla danych parametrów.</summary>
      <returns>Zwraca wartość <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />.</returns>
      <param name="type">Typ do sformatowania.</param>
      <param name="request">Żądanie.</param>
      <param name="mediaType">Typ nośnika.</param>
    </member>
    <member name="P:System.Net.Http.Formatting.MediaTypeFormatter.MaxHttpCollectionKeys">
      <summary>Pobiera lub ustawia maksymalną liczbę kluczy przechowywanych w klasie T: <see cref="System.Collections.Specialized.NameValueCollection" />.</summary>
      <returns>Maksymalna liczba kluczy.</returns>
    </member>
    <member name="P:System.Net.Http.Formatting.MediaTypeFormatter.MediaTypeMappings">
      <summary>Pobiera modyfikowalną kolekcję obiektów <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" /> z dopasowanymi żądaniami HTTP do typów nośników.</summary>
      <returns>Kolekcja wystąpień klasy <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" />.</returns>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)">
      <summary>Asynchronicznie deserializuje obiekt określonego typu.</summary>
      <returns>Klasa <see cref="T:System.Threading.Tasks.Task" />, która jako wynik zwraca obiekt określonego typu.</returns>
      <param name="type">Typ obiektu do zdeserializowania.</param>
      <param name="readStream">Element <see cref="T:System.IO.Stream" /> do odczytu.</param>
      <param name="content">Klasa <see cref="T:System.Net.Http.HttpContent" />, jeśli jest dostępna. Może to być wartość null.</param>
      <param name="formatterLogger">Element <see cref="T:System.Net.Http.Formatting.IFormatterLogger" />, w którym mają być rejestrowane zdarzenia.</param>
      <exception cref="T:System.NotSupportedException">Typy pochodne muszą obsługiwać odczyt.</exception>
    </member>
    <member name="P:System.Net.Http.Formatting.MediaTypeFormatter.RequiredMemberSelector">
      <summary>Pobiera lub ustawia wystąpienie klasy <see cref="T:System.Net.Http.Formatting.IRequiredMemberSelector" /> używane do określania wymaganych elementów.</summary>
      <returns>Wystąpienie <see cref="T:System.Net.Http.Formatting.IRequiredMemberSelector" />.</returns>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatter.SelectCharacterEncoding(System.Net.Http.Headers.HttpContentHeaders)">
      <summary>Określa optymalne kodowanie znaków do odczytu lub zapisu treści jednostki HTTP przy danym zestawie nagłówków zawartości.</summary>
      <returns>Optymalne kodowanie.</returns>
      <param name="contentHeaders">Nagłówki zawartości.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatter.SetDefaultContentHeaders(System.Type,System.Net.Http.Headers.HttpContentHeaders,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary> Ustawia domyślne nagłówki dla zawartości, która będzie formatowana przy użyciu tego elementu formatującego. Ta metoda jest wywoływana z konstruktora <see cref="T:System.Net.Http.ObjectContent" />. Ta implementacja ustawia dla nagłówka typu zawartości wartość mediaType, jeśli nie ma on wartości null. Jeśli ma wartość null, ustawia dla typu zawartości domyślny typ nośnika tego elementu formatującego. Jeśli typ zawartości nie określa zestawu znaków, zestaw znaków zostanie ustawiony przy użyciu elementu <see cref="T:System.Text.Encoding" /> tego elementu formatującego. </summary>
      <param name="type">Typ obiektu poddawanego serializacji. Zobacz: <see cref="T:System.Net.Http.ObjectContent" />.</param>
      <param name="headers">Nagłówki zawartości, które powinny zostać skonfigurowane.</param>
      <param name="mediaType">Autorytatywny typ nośnika. Może mieć wartość null.</param>
    </member>
    <member name="P:System.Net.Http.Formatting.MediaTypeFormatter.SupportedEncodings">
      <summary>Pobiera modyfikowalną kolekcję kodowań znaków obsługiwanych przez tę klasę <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />.</summary>
      <returns>Kolekcja obiektów <see cref="T:System.Text.Encoding" />.</returns>
    </member>
    <member name="P:System.Net.Http.Formatting.MediaTypeFormatter.SupportedMediaTypes">
      <summary>Pobiera modyfikowalną kolekcję typów nośników obsługiwanych przez tę klasę <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />.</summary>
      <returns>Kolekcja obiektów <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext)">
      <summary>Asynchronicznie zapisuje obiekt określonego typu.</summary>
      <returns>Klasa <see cref="T:System.Threading.Tasks.Task" />, która będzie wykonywać zapis.</returns>
      <param name="type">Typ obiektu do zapisania.</param>
      <param name="value">Wartość obiektu do zapisania.  Może to być wartość null.</param>
      <param name="writeStream">Klasa <see cref="T:System.IO.Stream" />, w której ma zostać wykonany zapis.</param>
      <param name="content">Klasa <see cref="T:System.Net.Http.HttpContent" />, jeśli jest dostępna. Może to być wartość null.</param>
      <param name="transportContext">Klasa <see cref="T:System.Net.TransportContext" />, jeśli jest dostępna. Może to być wartość null.</param>
      <exception cref="T:System.NotSupportedException">Typy pochodne muszą obsługiwać zapis.</exception>
    </member>
    <member name="T:System.Net.Http.Formatting.MediaTypeFormatterCollection">
      <summary>Reprezentuje klasę kolekcji zawierającą wystąpienia klasy <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />.</summary>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatterCollection.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" /> z domyślnymi wartościami.</summary>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatterCollection.#ctor(System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" /> z określonym parametrem <paramref name="formatters" />.</summary>
      <param name="formatters">Kolekcja wystąpień klasy <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> do umieszczenia w kolekcji.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatterCollection.FindReader(System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary> Wyszukuje kolekcję dla elementu formatującego, który może odczytywać parametr <paramref name="type" /> architektury .NET w danym parametrze <paramref name="mediaType" />. </summary>
      <returns>Element formatujący <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />, który może odczytać typ, lub wartość null, jeśli element formatujący nie zostanie odnaleziony.</returns>
      <param name="type">Typ architektury .NET do odczytu.</param>
      <param name="mediaType">Typ nośnika na potrzeby dopasowywania.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatterCollection.FindWriter(System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary> Wyszukuje kolekcję dla elementu formatującego, który może zapisywać parametr <paramref name="type" /> architektury .NET w danym parametrze <paramref name="mediaType" />. </summary>
      <returns>Element formatujący <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />, który może zapisać typ, lub wartość null, jeśli element formatujący nie zostanie odnaleziony.</returns>
      <param name="type">Typ architektury .NET do zapisu.</param>
      <param name="mediaType">Typ nośnika na potrzeby dopasowywania.</param>
    </member>
    <member name="P:System.Net.Http.Formatting.MediaTypeFormatterCollection.FormUrlEncodedFormatter">
      <summary> Pobiera klasę <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> do użycia dla danych application/x-www-form-urlencoded. </summary>
      <returns> Klasa <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> do użycia dla danych application/x-www-form-urlencoded. </returns>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatterCollection.IsTypeExcludedFromValidation(System.Type)">
      <summary> Określa, czy parametr <paramref name="type" /> jest jednym z tych słabo zdefiniowanych typów, które powinny być wykluczone z weryfikacji.</summary>
      <returns>Wartość true, jeśli należy wykluczyć dany typ. W przeciwnym razie wartość false.</returns>
      <param name="type">Element <see cref="T:System.Type" /> architektury .NET do zweryfikowania.</param>
    </member>
    <member name="P:System.Net.Http.Formatting.MediaTypeFormatterCollection.JsonFormatter">
      <summary> Pobiera klasę <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> do użycia dla formatu JSON. </summary>
      <returns>Klasa <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> do użycia dla formatu JSON.</returns>
    </member>
    <member name="P:System.Net.Http.Formatting.MediaTypeFormatterCollection.XmlFormatter">
      <summary> Pobiera klasę <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> do użycia dla formatu XML.</summary>
      <returns> Klasa <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> do użycia dla formatu XML.</returns>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatterExtensions.AddQueryStringMapping(System.Net.Http.Formatting.MediaTypeFormatter,System.String,System.String,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary> Aktualizuje zbiór elementów <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" /> danego elementu formatter, tak aby skojarzyć element mediaType z elementami klasy <see cref="T:System.Uri" /> zawierającymi określony parametr zapytania i wartość tego parametru. </summary>
      <param name="formatter">Klasa <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> do odbierania nowego elementu <see cref="T:System.Net.Http.Formatting.QueryStringMapping" />.</param>
      <param name="queryStringParameterName">Nazwa parametru zapytania.</param>
      <param name="queryStringParameterValue">Wartość przypisana do tego parametru zapytania.</param>
      <param name="mediaType">Klasa <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> do skojarzenia z klasą <see cref="T:System.Uri" /> zawierającą ciąg zapytania pasujący do elementów queryStringParameterName i queryStringParameterValue.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatterExtensions.AddQueryStringMapping(System.Net.Http.Formatting.MediaTypeFormatter,System.String,System.String,System.String)">
      <summary> Aktualizuje zbiór elementów <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" /> danego elementu formatter, tak aby skojarzyć element mediaType z elementami klasy <see cref="T:System.Uri" /> zawierającymi określony parametr zapytania i wartość tego parametru. </summary>
      <param name="formatter">Klasa <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> do odbierania nowego elementu <see cref="T:System.Net.Http.Formatting.QueryStringMapping" />.</param>
      <param name="queryStringParameterName">Nazwa parametru zapytania.</param>
      <param name="queryStringParameterValue">Wartość przypisana do tego parametru zapytania.</param>
      <param name="mediaType">Typ nośnika do skojarzenia z klasą <see cref="T:System.Uri" /> zawierającą ciąg zapytania pasujący do elementów queryStringParameterName i queryStringParameterValue.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatterExtensions.AddRequestHeaderMapping(System.Net.Http.Formatting.MediaTypeFormatter,System.String,System.String,System.StringComparison,System.Boolean,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary> Aktualizuje zbiór elementów <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" /> danego elementu formatter, tak aby skojarzyć element mediaType z konkretnym polem nagłówka żądania HTTP z określoną wartością. </summary>
      <param name="formatter">Klasa <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> do odbierania nowego elementu <see cref="T:System.Net.Http.Formatting.MediaRangeMapping" />.</param>
      <param name="headerName">Nazwa nagłówka do dopasowywania.</param>
      <param name="headerValue">Wartość nagłówka do dopasowywania.</param>
      <param name="valueComparison">Klasa <see cref="T:System.StringComparison" /> do użycia podczas dopasowywania parametru headerValue.</param>
      <param name="isValueSubstring">W przypadku ustawienia tej właściwości na wartość true parametr headerValue jest uznawany za pasujący, jeśli pasuje do podciągu rzeczywistej wartości nagłówka.</param>
      <param name="mediaType">Klasa <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> do skojarzenia z wpisem elementu <see cref="M:HttpRequestMessage.Header" /> z nazwą pasującą do parametru headerName i wartością pasującą do parametru headerValue.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatterExtensions.AddRequestHeaderMapping(System.Net.Http.Formatting.MediaTypeFormatter,System.String,System.String,System.StringComparison,System.Boolean,System.String)">
      <summary> Aktualizuje zbiór elementów <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" /> danego elementu formatter, tak aby skojarzyć element mediaType z konkretnym polem nagłówka żądania HTTP z określoną wartością. </summary>
      <param name="formatter">Klasa <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> do odbierania nowego elementu <see cref="T:System.Net.Http.Formatting.MediaRangeMapping" />.</param>
      <param name="headerName">Nazwa nagłówka do dopasowywania.</param>
      <param name="headerValue">Wartość nagłówka do dopasowywania.</param>
      <param name="valueComparison">Klasa <see cref="T:System.StringComparison" /> do użycia podczas dopasowywania parametru headerValue.</param>
      <param name="isValueSubstring">W przypadku ustawienia tej właściwości na wartość true parametr headerValue jest uznawany za pasujący, jeśli pasuje do podciągu rzeczywistej wartości nagłówka.</param>
      <param name="mediaType">Typ nośnika do skojarzenia z wpisem elementu <see cref="M:HttpRequestMessage.Header" /> z nazwą pasującą do parametru headerName i wartością pasującą do parametru headerValue.</param>
    </member>
    <member name="T:System.Net.Http.Formatting.MediaTypeFormatterMatch">
      <summary> Ta klasa opisuje, jak dobrze konkretny obiekt <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> pasuje do żądania. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatterMatch.#ctor(System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,System.Nullable{System.Double},System.Net.Http.Formatting.MediaTypeFormatterMatchRanking)">
      <summary> Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterMatch" />. </summary>
      <param name="formatter">Pasujący element formatujący.</param>
      <param name="mediaType">Typ nośnika. Może mieć wartość null. W takim przypadku używany jest typ nośnika application/octet-stream.</param>
      <param name="quality">Jakość dopasowania. Może mieć wartość null. W takiej sytuacji przyjmuje się, że chodzi o pełne dopasowanie z wartością 1.0.</param>
      <param name="ranking">Rodzaj dopasowania.</param>
    </member>
    <member name="P:System.Net.Http.Formatting.MediaTypeFormatterMatch.Formatter">
      <summary> Pobiera element formatujący typu nośnika. </summary>
    </member>
    <member name="P:System.Net.Http.Formatting.MediaTypeFormatterMatch.MediaType">
      <summary> Pobiera dopasowany typ nośnika. </summary>
    </member>
    <member name="P:System.Net.Http.Formatting.MediaTypeFormatterMatch.Quality">
      <summary> Pobiera jakość dopasowania. </summary>
    </member>
    <member name="P:System.Net.Http.Formatting.MediaTypeFormatterMatch.Ranking">
      <summary> Pobiera rodzaj dopasowania, jakie miało miejsce. </summary>
    </member>
    <member name="T:System.Net.Http.Formatting.MediaTypeFormatterMatchRanking">
      <summary> Zawiera informacje na temat stopnia dopasowania obiektu <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> do jawnych lub niejawnych preferencji znalezionych w żądaniu przychodzącym. </summary>
    </member>
    <member name="F:System.Net.Http.Formatting.MediaTypeFormatterMatchRanking.None">
      <summary> Nie znaleziono dopasowania. </summary>
    </member>
    <member name="F:System.Net.Http.Formatting.MediaTypeFormatterMatchRanking.MatchOnCanWriteType">
      <summary> Dopasowano typ, co oznacza, że element formatujący może serializować dany typ.</summary>
    </member>
    <member name="F:System.Net.Http.Formatting.MediaTypeFormatterMatchRanking.MatchOnRequestAcceptHeaderLiteral">
      <summary>Dopasowany jawny, dosłowny nagłówek Accept, taki jak „application/json”.</summary>
    </member>
    <member name="F:System.Net.Http.Formatting.MediaTypeFormatterMatchRanking.MatchOnRequestAcceptHeaderSubtypeMediaRange">
      <summary>Dopasowano jawny zakres podtypu w nagłówku Accept, taki jak „application/*”.</summary>
    </member>
    <member name="F:System.Net.Http.Formatting.MediaTypeFormatterMatchRanking.MatchOnRequestAcceptHeaderAllMediaRange">
      <summary>Dopasowano jawny zakres „*/*” w nagłówku Accept.</summary>
    </member>
    <member name="F:System.Net.Http.Formatting.MediaTypeFormatterMatchRanking.MatchOnRequestWithMediaTypeMapping">
      <summary> Dopasowano obiekt <see cref="T:System.Net.Http.HttpRequestMessage" /> po zastosowaniu różnych mapowań <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" />. </summary>
    </member>
    <member name="F:System.Net.Http.Formatting.MediaTypeFormatterMatchRanking.MatchOnRequestMediaType">
      <summary> Dopasowano typ nośnika treści jednostki w komunikacie żądania HTTP.</summary>
    </member>
    <member name="T:System.Net.Http.Formatting.MediaTypeMapping">
      <summary> Abstrakcyjna klasa podstawowa używana do tworzenia skojarzenia między wystąpieniami klasy <see cref="T:System.Net.Http.HttpRequestMessage" /> lub <see cref="T:System.Net.Http.HttpResponseMessage" />, które mają określoną charakterystykę i określony element <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.  </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeMapping.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary> Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" /> z daną wartością elementu mediaType. </summary>
      <param name="mediaType"> Element <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> skojarzony z wystąpieniami klasy <see cref="T:System.Net.Http.HttpRequestMessage" /> lub <see cref="T:System.Net.Http.HttpResponseMessage" /> o określonej charakterystyce klasy <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" />. </param>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeMapping.#ctor(System.String)">
      <summary> Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" /> z daną wartością elementu mediaType. </summary>
      <param name="mediaType"> Element <see cref="T:System.String" /> skojarzony z wystąpieniami klasy <see cref="T:System.Net.Http.HttpRequestMessage" /> lub <see cref="T:System.Net.Http.HttpResponseMessage" /> o określonej charakterystyce klasy <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" />. </param>
    </member>
    <member name="P:System.Net.Http.Formatting.MediaTypeMapping.MediaType">
      <summary> Pobiera element <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> skojarzony z wystąpieniami klasy <see cref="T:System.Net.Http.HttpRequestMessage" /> lub <see cref="T:System.Net.Http.HttpResponseMessage" /> o danej charakterystyce klasy <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" />. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeMapping.TryMatchMediaType(System.Net.Http.HttpRequestMessage)">
      <summary> Zwraca jakość dopasowania klasy <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> skojarzonej z elementem request. </summary>
      <returns> Jakość dopasowania. Musi zawierać się w przedziale od 0.0 do 1.0. Wartość 0.0 oznacza brak dopasowania. Wartość 1.0 oznacza pełne dopasowanie. </returns>
      <param name="request"> Klasa <see cref="T:System.Net.Http.HttpRequestMessage" /> do oceny charakterystyki skojarzonej z elementem <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> klasy <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" />. </param>
    </member>
    <member name="T:System.Net.Http.Formatting.QueryStringMapping">
      <summary> Klasa, która udostępnia elementy klasy <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> z ciągów zapytań. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.QueryStringMapping.#ctor(System.String,System.String,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary> Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.Formatting.QueryStringMapping" />. </summary>
      <param name="queryStringParameterName">Nazwa parametru ciągu zapytania do dopasowania, jeśli istnieje.</param>
      <param name="queryStringParameterValue">Wartość parametru ciągu zapytania określona przez element queryStringParameterName.</param>
      <param name="mediaType">Klasa <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />, która ma zostać użyta, jeśli parametr zapytania określony przez element queryStringParameterName jest obecny i ma przypisaną wartość określoną przez element queryStringParameterValue.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.QueryStringMapping.#ctor(System.String,System.String,System.String)">
      <summary> Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.Formatting.QueryStringMapping" />. </summary>
      <param name="queryStringParameterName">Nazwa parametru ciągu zapytania do dopasowania, jeśli istnieje.</param>
      <param name="queryStringParameterValue">Wartość parametru ciągu zapytania określona przez element queryStringParameterName.</param>
      <param name="mediaType">Typ nośnika, który ma zostać użyty, jeśli parametr zapytania określony przez element queryStringParameterName jest obecny i ma przypisaną wartość określoną przez element queryStringParameterValue.</param>
    </member>
    <member name="P:System.Net.Http.Formatting.QueryStringMapping.QueryStringParameterName">
      <summary> Pobiera nazwę parametru ciągu zapytania. </summary>
    </member>
    <member name="P:System.Net.Http.Formatting.QueryStringMapping.QueryStringParameterValue">
      <summary> Pobiera wartość parametru ciągu zapytania. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.QueryStringMapping.TryMatchMediaType(System.Net.Http.HttpRequestMessage)">
      <summary> Zwraca wartość wskazującą, czy bieżące wystąpienie klasy <see cref="T:System.Net.Http.Formatting.QueryStringMapping" /> może zwrócić klasę <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> z elementu request. </summary>
      <returns>Jeśli to wystąpienie może utworzyć klasę <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> z elementu request, zwraca wartość 1.0, w przeciwnym razie zwraca wartość 0.0.</returns>
      <param name="request">Klasa <see cref="T:System.Net.Http.HttpRequestMessage" /> do sprawdzenia.</param>
    </member>
    <member name="T:System.Net.Http.Formatting.RequestHeaderMapping">
      <summary> Ta klasa udostępnia mapowanie dowolnego pola nagłówka żądania HTTP na klasę <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> używaną do wybierania wystąpień klasy <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> na potrzeby obsługi całej treści elementu <see cref="T:System.Net.Http.HttpRequestMessage" /> lub <see cref="T:System.Net.Http.HttpResponseMessage" />. &lt;uwagi&gt;Ta klasa sprawdza podczas dopasowywania tylko pola nagłówka skojarzone z elementem <see cref="M:HttpRequestMessage.Headers" />. Nie sprawdza pól nagłówka skojarzonych z wystąpieniami klasy <see cref="M:HttpResponseMessage.Headers" /> lub <see cref="M:HttpContent.Headers" />..&lt;/uwagi&gt;</summary>
    </member>
    <member name="M:System.Net.Http.Formatting.RequestHeaderMapping.#ctor(System.String,System.String,System.StringComparison,System.Boolean,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary> Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.Formatting.RequestHeaderMapping" />. </summary>
      <param name="headerName">Nazwa nagłówka do dopasowywania.</param>
      <param name="headerValue">Wartość nagłówka do dopasowywania.</param>
      <param name="valueComparison">Klasa <see cref="T:System.StringComparison" /> do użycia podczas dopasowywania parametru headerValue.</param>
      <param name="isValueSubstring">W przypadku ustawienia tej właściwości na wartość true parametr headerValue jest uznawany za pasujący, jeśli pasuje do podciągu rzeczywistej wartości nagłówka.</param>
      <param name="mediaType">Klasa <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> do użycia, jeśli elementy headerName i headerValue zostaną uznane za pasujące.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.RequestHeaderMapping.#ctor(System.String,System.String,System.StringComparison,System.Boolean,System.String)">
      <summary> Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.Formatting.RequestHeaderMapping" />. </summary>
      <param name="headerName">Nazwa nagłówka do dopasowywania.</param>
      <param name="headerValue">Wartość nagłówka do dopasowywania.</param>
      <param name="valueComparison">Porównanie wartości używane podczas dopasowywania elementu headerValue.</param>
      <param name="isValueSubstring">W przypadku ustawienia tej właściwości na wartość true parametr headerValue jest uznawany za pasujący, jeśli pasuje do podciągu rzeczywistej wartości nagłówka.</param>
      <param name="mediaType">Typ nośnika do zastosowania, jeśli elementy headerName i headerValue zostaną uznane za pasujące.</param>
    </member>
    <member name="P:System.Net.Http.Formatting.RequestHeaderMapping.HeaderName">
      <summary> Pobiera nazwę nagłówka do dopasowania. </summary>
    </member>
    <member name="P:System.Net.Http.Formatting.RequestHeaderMapping.HeaderValue">
      <summary> Pobiera wartość nagłówka do dopasowania. </summary>
    </member>
    <member name="P:System.Net.Http.Formatting.RequestHeaderMapping.HeaderValueComparison">
      <summary> Pobiera klasę <see cref="T:System.StringComparison" /> do użycia podczas dopasowywania elementu <see cref="M:HeaderValue" />. </summary>
    </member>
    <member name="P:System.Net.Http.Formatting.RequestHeaderMapping.IsValueSubstring">
      <summary> Pobiera wartość wskazującą, czy element <see cref="M:HeaderValue" /> jest dopasowywany jako podciąg rzeczywistej wartości nagłówka i to wystąpienie jest podciągiem wartości. </summary>
      <returns>true<see cref="P:System.Net.Http.Formatting.RequestHeaderMapping.HeaderValue" />false</returns>
    </member>
    <member name="M:System.Net.Http.Formatting.RequestHeaderMapping.TryMatchMediaType(System.Net.Http.HttpRequestMessage)">
      <summary> Zwraca wartość wskazującą, czy bieżące wystąpienie klasy <see cref="T:System.Net.Http.Formatting.RequestHeaderMapping" /> może zwrócić klasę <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> z elementu request. </summary>
      <returns> Jakość dopasowania. Musi zawierać się w przedziale od 0.0 do 1.0. Wartość 0.0 oznacza brak dopasowania. Wartość 1.0 oznacza pełne dopasowanie. </returns>
      <param name="request">Klasa <see cref="T:System.Net.Http.HttpRequestMessage" /> do sprawdzenia.</param>
    </member>
    <member name="T:System.Net.Http.Formatting.XmlHttpRequestHeaderMapping">
      <summary> Obiekt <see cref="T:System.Net.Http.Formatting.RequestHeaderMapping" /> mapujący pole nagłówka HTTP X-Requested-With ustawione przez funkcję technologii AJAX XmlHttpRequest (XHR) na typ nośnika application/json, jeśli w żądaniu nie ma jawnie określonych pól nagłówka Accept. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.XmlHttpRequestHeaderMapping.#ctor">
      <summary> Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.Formatting.XmlHttpRequestHeaderMapping" />. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.XmlHttpRequestHeaderMapping.TryMatchMediaType(System.Net.Http.HttpRequestMessage)">
      <summary> Zwraca wartość wskazującą, czy bieżące wystąpienie klasy <see cref="T:System.Net.Http.Formatting.RequestHeaderMapping" /> może zwrócić klasę <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> z elementu request. </summary>
      <returns> Jakość dopasowania. Wartość 0.0 oznacza brak dopasowania. Wartość 1.0 oznacza dokładne dopasowanie i informuje, że żądanie zostało zgłoszone za pomocą obiektu XmlHttpRequest bez nagłówka Accept. </returns>
      <param name="request">Klasa <see cref="T:System.Net.Http.HttpRequestMessage" /> do sprawdzenia.</param>
    </member>
    <member name="T:System.Net.Http.Formatting.XmlMediaTypeFormatter">
      <summary>Klasa <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> na potrzeby obsługi formatu XML. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.Formatting.XmlMediaTypeFormatter" />.</summary>
    </member>
    <member name="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.CanReadType(System.Type)">
      <summary>Sprawdza, czy klasa <see cref="T:System.Net.Http.Formatting.XmlMediaTypeFormatter" /> może wykonywać deserializację obiektu określonego typu.</summary>
      <returns>Wartość true, jeśli klasa <see cref="T:System.Net.Http.Formatting.XmlMediaTypeFormatter" /> może wykonywać deserializację typu; w przeciwnym razie wartość false.</returns>
      <param name="type">Typ do zdeserializowania.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.CanWriteType(System.Type)">
      <summary>Sprawdza, czy klasa <see cref="T:System.Net.Http.Formatting.XmlMediaTypeFormatter" /> może wykonywać serializację obiektu określonego typu.</summary>
      <returns>Wartość true, jeśli klasa <see cref="T:System.Net.Http.Formatting.XmlMediaTypeFormatter" /> może wykonywać serializację typu; w przeciwnym razie wartość false.</returns>
      <param name="type">Typ do zserializowania.</param>
    </member>
    <member name="P:System.Net.Http.Formatting.XmlMediaTypeFormatter.DefaultMediaType">
      <summary>Pobiera domyślny typ nośnika dla elementu formatującego XML.</summary>
      <returns>Domyślny typ nośnika (application/xml).</returns>
    </member>
    <member name="P:System.Net.Http.Formatting.XmlMediaTypeFormatter.Indent">
      <summary>Pobiera lub ustawia wartość wskazującą, czy stosować wcięcia elementów podczas zapisywania danych.</summary>
      <returns>Wartość true w przypadku elementów indent; w przeciwnym razie wartość false.</returns>
    </member>
    <member name="P:System.Net.Http.Formatting.XmlMediaTypeFormatter.MaxDepth">
      <summary>Pobiera i ustawia maksymalną głębokość zagnieżdżonego węzła.</summary>
      <returns>Maksymalna głębokość zagnieżdżonego węzła.</returns>
    </member>
    <member name="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)">
      <summary> Wywoływana podczas deserializacji w celu odczytania obiektu z określonym elementem type z określonego elementu readStream. </summary>
      <returns>Klasa <see cref="T:System.Threading.Tasks.Task" />, która jako wynik zwróci odczytane wystąpienie obiektu.</returns>
      <param name="type">Typ obiektu do odczytania.</param>
      <param name="readStream">Element <see cref="T:System.IO.Stream" />, z którego ma zostać przeprowadzony odczyt.</param>
      <param name="content">Klasa <see cref="T:System.Net.Http.HttpContent" /> dla odczytywanej zawartości.</param>
      <param name="formatterLogger">Element <see cref="T:System.Net.Http.Formatting.IFormatterLogger" />, w którym mają być rejestrowane zdarzenia.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.RemoveSerializer(System.Type)">
      <summary>Wyrejestrowuje element serializujący obecnie skojarzony z danym typem.</summary>
      <returns>Wartość true, jeśli dla typu został wcześniej zarejestrowany element serializujący; w przeciwnym razie wartość false.</returns>
      <param name="type">Typ obiektu, którego element serializujący powinien zostać usunięty.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.SetSerializer``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Rejestruje klasę <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> w celu odczytania lub zapisania obiektów określonego typu.</summary>
      <param name="serializer">Wystąpienie <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <typeparam name="T">Typ obiektu, który będzie serializowany lub deserializowany za pomocą parametru <paramref name="serializer" />.</typeparam>
    </member>
    <member name="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.SetSerializer(System.Type,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Rejestruje klasę <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> w celu odczytania lub zapisania obiektów określonego typu.</summary>
      <param name="type">Typ obiektu, który będzie serializowany lub deserializowany za pomocą parametru <paramref name="serializer" />.</param>
      <param name="serializer">Wystąpienie <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.SetSerializer(System.Type,System.Xml.Serialization.XmlSerializer)">
      <summary>Rejestruje klasę <see cref="T:System.Xml.Serialization.XmlSerializer" /> w celu odczytania lub zapisania obiektów określonego typu.</summary>
      <param name="type">Typ obiektu, który będzie serializowany lub deserializowany za pomocą parametru <paramref name="serializer" />.</param>
      <param name="serializer">Wystąpienie <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.SetSerializer``1(System.Xml.Serialization.XmlSerializer)">
      <summary>Rejestruje klasę <see cref="T:System.Xml.Serialization.XmlSerializer" /> w celu odczytania lub zapisania obiektów określonego typu.</summary>
      <param name="serializer">Wystąpienie <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
      <typeparam name="T">Typ obiektu, który będzie serializowany lub deserializowany za pomocą parametru <paramref name="serializer" />.</typeparam>
    </member>
    <member name="P:System.Net.Http.Formatting.XmlMediaTypeFormatter.UseXmlSerializer">
      <summary>Pobiera lub ustawia wartość określającą, czy element formatujący XML używa klasy <see cref="T:System.Xml.Serialization.XmlSerializer" /> jako domyślnego elementu serializującego zamiast klasy <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
      <returns>W przypadku ustawienia wartości true element formatujący używa domyślnie klasy <see cref="T:System.Xml.Serialization.XmlSerializer" />; w przeciwnym razie używa domyślnie klasy <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</returns>
    </member>
    <member name="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext)">
      <summary> Wywoływana podczas serializacji w celu zapisania obiektu z określonym elementem type do określonego elementu writeStream. </summary>
      <returns>Klasa <see cref="T:System.Threading.Tasks.Task" />, która będzie zapisywała wartość w strumieniu.</returns>
      <param name="type">Typ obiektu do zapisania.</param>
      <param name="value">Obiekt do zapisania.</param>
      <param name="writeStream">Klasa <see cref="T:System.IO.Stream" />, w której ma zostać wykonany zapis.</param>
      <param name="content">Klasa <see cref="T:System.Net.Http.HttpContent" /> dla zapisywanej zawartości.</param>
      <param name="transportContext">
        <see cref="T:System.Net.TransportContext" />.</param>
    </member>
    <member name="T:System.Net.Http.Handlers.HttpProgressEventArgs">
      <summary>Reprezentuje argumenty zdarzenia dla postępu protokołu HTTP.</summary>
    </member>
    <member name="M:System.Net.Http.Handlers.HttpProgressEventArgs.#ctor(System.Int32,System.Object,System.Int32,System.Nullable{System.Int64})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.Handlers.HttpProgressEventArgs" />.</summary>
      <param name="progressPercentage">Procent postępu.</param>
      <param name="userToken">Token użytkownika.</param>
      <param name="bytesTransferred">Liczba bajtów przesłanych.</param>
      <param name="totalBytes">Całkowita liczba bajtów przesłanych.</param>
    </member>
    <member name="P:System.Net.Http.Handlers.HttpProgressEventArgs.BytesTransferred">
      <summary>Pobiera liczbę bajtów przesłanych w ramach postępu protokołu HTTP.</summary>
      <returns>Liczba bajtów przesłanych w ramach postępu protokołu HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Handlers.HttpProgressEventArgs.TotalBytes">
      <summary>Pobiera całkowitą liczbę bajtów przesłanych w ramach postępu protokołu HTTP.</summary>
      <returns>Całkowita liczba bajtów przesłanych w ramach postępu protokołu HTTP.</returns>
    </member>
    <member name="T:System.Net.Http.Handlers.ProgressMessageHandler">
      <summary>Generuje powiadomienie o postępie dla przekazywanych jednostek żądania i pobieranych jednostek odpowiedzi.</summary>
    </member>
    <member name="M:System.Net.Http.Handlers.ProgressMessageHandler.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.Handlers.ProgressMessageHandler" />.</summary>
    </member>
    <member name="M:System.Net.Http.Handlers.ProgressMessageHandler.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.Handlers.ProgressMessageHandler" />.</summary>
      <param name="innerHandler">Wewnętrzny program obsługi wiadomości.</param>
    </member>
    <member name="E:System.Net.Http.Handlers.ProgressMessageHandler.HttpReceiveProgress">
      <summary>Wyświetlany podczas pobierania jednostek zdarzeń.</summary>
    </member>
    <member name="E:System.Net.Http.Handlers.ProgressMessageHandler.HttpSendProgress">
      <summary>Wyświetlany podczas przekazywania jednostek zdarzeń.</summary>
    </member>
    <member name="M:System.Net.Http.Handlers.ProgressMessageHandler.OnHttpRequestProgress(System.Net.Http.HttpRequestMessage,System.Net.Http.Handlers.HttpProgressEventArgs)">
      <summary>Wywołuje zdarzenie obsługujące żądanie postępu.</summary>
      <param name="request">Żądanie.</param>
      <param name="e">Program obsługi zdarzeń dla żądania.</param>
    </member>
    <member name="M:System.Net.Http.Handlers.ProgressMessageHandler.OnHttpResponseProgress(System.Net.Http.HttpRequestMessage,System.Net.Http.Handlers.HttpProgressEventArgs)">
      <summary>Wywołuje zdarzenie obsługujące odpowiedź dotyczącą postępu.</summary>
      <param name="request">Żądanie.</param>
      <param name="e">Program obsługi zdarzeń dla żądania.</param>
    </member>
    <member name="M:System.Net.Http.Handlers.ProgressMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Wysyła określoną wiadomość o postępie na na serwer HTTP w celu dostarczenia.</summary>
      <returns>Komunikat o postępie wysyłania.</returns>
      <param name="request">Żądanie.</param>
      <param name="cancellationToken">Token anulowania.</param>
    </member>
    <member name="T:System.Net.Http.Headers.CookieHeaderValue">
      <summary>Udostępnia wartość nagłówka pliku cookie.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.CookieHeaderValue.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.Headers.CookieHeaderValue" />.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.CookieHeaderValue.#ctor(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.Headers.CookieHeaderValue" />.</summary>
      <param name="name">Wartość nazwy.</param>
      <param name="values">Wartości.</param>
    </member>
    <member name="M:System.Net.Http.Headers.CookieHeaderValue.#ctor(System.String,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.Headers.CookieHeaderValue" />.</summary>
      <param name="name">Wartość nazwy.</param>
      <param name="value">Wartość.</param>
    </member>
    <member name="M:System.Net.Http.Headers.CookieHeaderValue.Clone">
      <summary>Tworzy kopię pobieżną wartości pliku cookie.</summary>
      <returns>Kopia pobieżna wartości pliku cookie.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CookieHeaderValue.Cookies">
      <summary>Pobiera kolekcję plików cookie wysłanych przez klienta.</summary>
      <returns>Obiekt kolekcji reprezentujący zmienne plików cookie klienta.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CookieHeaderValue.Domain">
      <summary>Pobiera lub ustawia domenę, z którą ma zostać skojarzony plik cookie.</summary>
      <returns>Nazwa domeny do skojarzenia z plikiem cookie.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CookieHeaderValue.Expires">
      <summary>Pobiera lub ustawia datę i godzinę wygaśnięcia pliku cookie.</summary>
      <returns>Data i godzina (na kliencie), o której plik cookie wygasa.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CookieHeaderValue.HttpOnly">
      <summary>Pobiera lub ustawia wartość określającą, czy plik cookie jest dostępny za pomocą skryptu po stronie klienta.</summary>
      <returns>Wartość true, jeśli plik cookie ma atrybut HttpOnly i nie można uzyskiwać do niego dostępu za pomocą skryptu po stronie klienta; w przeciwnym razie wartość false.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CookieHeaderValue.Item(System.String)">
      <summary>Pobiera skrót do właściwości pliku cookie.</summary>
      <returns>Wartość pliku cookie.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CookieHeaderValue.MaxAge">
      <summary>Pobiera lub ustawia maksymalny wiek dozwolony dla zasobu.</summary>
      <returns>Maksymalny wiek dozwolony dla zasobu.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CookieHeaderValue.Path">
      <summary>Pobiera lub ustawia ścieżkę wirtualną do przesłania z bieżącym plikiem cookie.</summary>
      <returns>Ścieżka wirtualna do przesłania z plikiem cookie.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CookieHeaderValue.Secure">
      <summary>Pobiera lub ustawia wartość wskazującą, czy plik cookie ma zostać przesłany przy użyciu protokołu SSL (Secure Sockets Layer), tj. wyłącznie za pomocą protokołu HTTPS.</summary>
      <returns>Wartość true, aby przesłać plik cookie przez połączenie SSL (HTTPS); w przeciwnym razie wartość false.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CookieHeaderValue.ToString">
      <summary>Zwraca ciąg reprezentujący bieżący obiekt.</summary>
      <returns>Ciąg reprezentujący bieżący obiekt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CookieHeaderValue.TryParse(System.String,System.Net.Http.Headers.CookieHeaderValue@)">
      <summary>Wskazuje wartość określającą, czy reprezentacja w postaci ciągu zostanie przekonwertowana.</summary>
      <returns>Wartość true, jeśli reprezentacja ciągu zostanie przekonwertowana; w przeciwnym razie — false.</returns>
      <param name="input">Wartość wejściowa.</param>
      <param name="parsedValue">Przeanalizowana wartość do przekonwertowania.</param>
    </member>
    <member name="T:System.Net.Http.Headers.CookieState">
      <summary>Zawiera nazwę pliku cookie i stan skojarzonego z nią pliku cookie.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.CookieState.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.Headers.CookieState" />.</summary>
      <param name="name">Nazwa pliku cookie.</param>
    </member>
    <member name="M:System.Net.Http.Headers.CookieState.#ctor(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.Headers.CookieState" />.</summary>
      <param name="name">Nazwa pliku cookie.</param>
      <param name="values">Kolekcja par nazwa/wartość dla pliku cookie.</param>
    </member>
    <member name="M:System.Net.Http.Headers.CookieState.#ctor(System.String,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Http.Headers.CookieState" />.</summary>
      <param name="name">Nazwa pliku cookie.</param>
      <param name="value">Wartość pliku cookie.</param>
    </member>
    <member name="M:System.Net.Http.Headers.CookieState.Clone">
      <summary>Zwraca nowy obiekt, który jest kopią bieżącego wystąpienia.</summary>
      <returns>Nowy obiekt, który jest kopią bieżącego wystąpienia.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CookieState.Item(System.String)">
      <summary>Pobiera lub ustawia wartość pliku cookie z określoną nazwą pliku cookie, jeśli dane pliku cookie mają strukturę.</summary>
      <returns>Wartość pliku cookie z określoną nazwą pliku cookie.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CookieState.Name">
      <summary>Pobiera lub ustawia nazwę pliku cookie.</summary>
      <returns>Nazwa pliku cookie.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CookieState.ToString">
      <summary>Zwraca ciąg reprezentujący bieżący obiekt.</summary>
      <returns>Ciąg reprezentujący bieżący obiekt.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CookieState.Value">
      <summary>Pobiera lub ustawia wartość pliku cookie, jeśli dane pliku cookie są prostą wartością ciągu.</summary>
      <returns>Wartość pliku cookie. </returns>
    </member>
    <member name="P:System.Net.Http.Headers.CookieState.Values">
      <summary>Pobiera lub ustawia kolekcję par nazwa/wartość, jeśli dane pliku cookie mają strukturę.</summary>
      <returns>Kolekcja par nazwa/wartość dla pliku cookie.</returns>
    </member>
  </members>
</doc>